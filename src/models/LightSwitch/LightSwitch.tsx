/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Dmitry Horodok (https://sketchfab.com/berkutprof)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/light-switch-5025ad2b040f4c9c8cc3f65876828ad4
title: Light_Switch
*/

import React from 'react'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'
import { useGLTF } from '@react-three/drei'
import LightSwitchModelPath from './lightSwitch.glb'

type GLTFResult = GLTF & {
  nodes: {
    Cube_low_Material_0: THREE.Mesh
    Cube001_low_Material_0: THREE.Mesh
    Cube002_low_Material_0: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

const LightSwitch = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(LightSwitchModelPath) as GLTFResult

  return (
    <group {...props} dispose={null}>
      <group scale={7.8} position={[0, 34, -50]} rotation={[0, Math.PI, 0]}>
        <group
          position={[0, 0, -3.91]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <mesh
            geometry={nodes.Cube_low_Material_0.geometry}
            material={materials.Material}
          />
        </group>
        <group
          position={[0, 0, -4.19]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <mesh
            geometry={nodes.Cube001_low_Material_0.geometry}
            material={materials.Material}
          />
        </group>
        <group
          position={[0, 0, -4.87]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <mesh
            geometry={nodes.Cube002_low_Material_0.geometry}
            material={materials.Material}
          />
        </group>
      </group>
    </group>
  )
}

export default LightSwitch
