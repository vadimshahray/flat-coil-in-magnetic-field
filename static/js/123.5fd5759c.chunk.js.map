{"version":3,"file":"static/js/123.5fd5759c.chunk.js","mappings":"6bA+BA,EArBc,SAACA,GACb,IAAMC,GAAcC,EAAAA,EAAAA,GAAW,CAC7BC,M,66NACAC,IAAKC,EACLC,UAAWC,EACXC,a,ivFACAC,aAAcC,EACdC,gBAAiBC,IAGnB,OACEC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWd,GAAK,IAAEe,QAAS,KAAKC,UAC9BC,EAAAA,EAAAA,MAAA,QAAMC,SAAU,CAAC,GAAIC,KAAKC,GAAK,EAAG,GAAGJ,SAAA,EACnCH,EAAAA,EAAAA,KAAA,eAAaQ,KAAM,CAACC,EAAAA,GAAS,EAAGC,EAAAA,OAEhCV,EAAAA,EAAAA,KAAA,wBAAAC,EAAAA,EAAAA,GAAA,GAA0Bb,SAIlC,C,mGCzBMuB,EAAW,SAAAC,GAAG,OAAIA,IAAQC,OAAOD,KAASE,MAAMC,QAAQH,IAAuB,oBAARA,CAAkB,EAC/F,SAASvB,EAAW2B,EAAOC,GACzB,IAAMC,GAAKC,EAAAA,EAAAA,IAAS,SAAAC,GAAK,OAAIA,EAAMF,EAAE,IAC/BG,GAAWC,EAAAA,EAAAA,GAAUC,EAAAA,cAAeZ,EAASK,GAASH,OAAOW,OAAOR,GAASA,GAWnF,IAVAS,EAAAA,EAAAA,kBAAgB,WACJ,MAAVR,GAA0BA,EAAOI,EACnC,GAAG,CAACJ,KAGJS,EAAAA,EAAAA,YAAU,YACMZ,MAAMC,QAAQM,GAAYA,EAAW,CAACA,IAC9CM,QAAQT,EAAGU,YACnB,GAAG,CAACV,EAAIG,IAEJV,EAASK,GAAQ,CACnB,IAAMa,EAAOhB,OAAOgB,KAAKb,GACnBc,EAAQ,CAAC,EAIf,OAHAD,EAAKF,SAAQ,SAAAI,GAAG,OAAIlB,OAAOmB,OAAOF,GAAKG,EAAAA,EAAAA,GAAA,GACpCF,EAAMV,EAASQ,EAAKK,QAAQH,KAC7B,IACKD,CACT,CACE,OAAOT,CAEX,CAEAhC,EAAW8C,QAAU,SAAAvB,GAAG,OAAIU,EAAAA,EAAAA,QAAkBC,EAAAA,cAAeX,EAAI,EAEjEvB,EAAW+C,MAAQ,SAAApB,GAAK,OAAIM,EAAAA,EAAAA,MAAgBC,EAAAA,cAAeP,EAAM,C","sources":["models/Floor/Floor.tsx","../node_modules/@react-three/drei/core/useTexture.js"],"sourcesContent":["import React from 'react'\r\nimport { FLOOR_D, FLOOR_W } from '@constants'\r\nimport { useTexture } from '@react-three/drei'\r\nimport FloorAOPath from './textures/floor_ao.png'\r\nimport FloorColorPath from './textures/floor_color.png'\r\nimport FloorHeightPath from './textures/floor_height.png'\r\nimport FloorNormalPath from './textures/floor_normal.png'\r\nimport FloorMetallicPath from './textures/floor_metallic.png'\r\nimport FloorRoughnessPath from './textures/floor_roughness.png'\r\n\r\nconst Floor = (props: JSX.IntrinsicElements['group']) => {\r\n  const textureMaps = useTexture({\r\n    aoMap: FloorAOPath,\r\n    map: FloorColorPath,\r\n    normalMap: FloorNormalPath,\r\n    metalnessMap: FloorMetallicPath,\r\n    roughnessMap: FloorRoughnessPath,\r\n    displacementMap: FloorHeightPath,\r\n  })\r\n\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <mesh rotation={[0, -Math.PI / 2, 0]}>\r\n        <boxGeometry args={[FLOOR_W, 1, FLOOR_D]} />\r\n\r\n        <meshStandardMaterial {...textureMaps} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default Floor\r\n","import { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useLayoutEffect, useEffect } from 'react';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null ? void 0 : onLoad(textures);\n  }, [onLoad]); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\n\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n"],"names":["props","textureMaps","useTexture","aoMap","map","FloorColorPath","normalMap","FloorNormalPath","metalnessMap","roughnessMap","FloorRoughnessPath","displacementMap","FloorHeightPath","_jsx","_objectSpread","dispose","children","_jsxs","rotation","Math","PI","args","FLOOR_W","FLOOR_D","IsObject","url","Object","Array","isArray","input","onLoad","gl","useThree","state","textures","useLoader","TextureLoader","values","useLayoutEffect","useEffect","forEach","initTexture","keys","keyed","key","assign","_defineProperty","indexOf","preload","clear"],"sourceRoot":""}