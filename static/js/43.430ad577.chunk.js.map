{"version":3,"file":"static/js/43.430ad577.chunk.js","mappings":"mWA0DMA,EAAyB,IAAIC,EAAAA,MAAYC,KAAKC,GAAK,EAAGD,KAAKC,GAAK,EAAG,GA8IzE,EA5IsB,SAACC,GACrB,IAAAC,GAA6BC,EAAAA,EAAAA,GAAQC,GAA7BC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAETC,GAAUC,EAAAA,EAAAA,UACVC,GAAcD,EAAAA,EAAAA,QAAmB,MACjCE,GAAoBF,EAAAA,EAAAA,QAAoB,OAE9CG,EAAAA,EAAAA,IAAS,WAAO,IAADC,EAAAC,EAAAC,EACPC,GAAWC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,YACvCC,GAAkBC,EAAAA,EAAAA,IAAmCF,EAAAA,EAAAA,YAEvDV,EAAQa,UACVb,EAAQa,QAAQC,KAAOH,GACnBI,EAAAA,EAAAA,IAAsBP,EAASQ,QAAQ,GAAI,GAC3C,IAGa,QAAnBX,EAAAH,EAAYW,eAAO,IAAAR,GAAU,QAAVC,EAAnBD,EAAqBY,gBAAQ,IAAAX,GAA7BA,EAA+BY,KAC7BP,EAAkBQ,MAtBE,OAyBtB,IAAMC,EACJ5B,KAAKC,GAAK,EAAKD,KAAKC,GAAKe,EAAYa,EAAAA,GAEvC/B,EAAuBgC,IACrBhC,EAAuBiC,EACvBH,EACA9B,EAAuBkC,GAGA,QAAzBjB,EAAAJ,EAAkBU,eAAO,IAAAN,GAAzBA,EAA2BkB,qBAAqBnC,EAClD,IA2BA,OACEoC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWjC,GAAK,IAAEkC,QAAS,KAAKC,UAC9BC,EAAAA,EAAAA,MAAA,SAAOb,SAAU,CAAC,EAAG,EAAG,GAAIc,SAAU,CAAC,GAAGC,EAAAA,EAAAA,IAAS,IAAK,GAAGH,SAAA,EACzDC,EAAAA,EAAAA,MAAA,SACEb,SAAU,EAAE,IAAM,OAAQ,KAC1Bc,SAAU,CAAC,GAAIvC,KAAKC,GAAK,EAAG,GAC5BwC,MAAO,CAAC,MAAO,OAAQ,OAAOJ,SAAA,EAE9BH,EAAAA,EAAAA,KAAA,QAAMQ,SAAUpC,EAAMqC,KAAKD,SAAUE,SAAUrC,EAAUsC,aACzDX,EAAAA,EAAAA,KAAA,QAAMQ,SAAUpC,EAAMwC,OAAOJ,SAAUE,SAAUrC,EAAUwC,SAC3Db,EAAAA,EAAAA,KAAA,QACEQ,SAAUpC,EAAM0C,OAAON,SACvBE,SAAUrC,EAAU0C,aAEtBf,EAAAA,EAAAA,KAAA,QAAMQ,SAAUpC,EAAM4C,OAAOR,SAAUE,SAAUrC,EAAU4C,SAC3DjB,EAAAA,EAAAA,KAAA,QACEQ,SAAUpC,EAAM8C,OAAOV,SACvBE,SAAUrC,EAAU8C,mBAEtBnB,EAAAA,EAAAA,KAAA,QACEQ,SAAUpC,EAAMgD,OAAOZ,SACvBE,SAAUrC,EAAU,eAEtB2B,EAAAA,EAAAA,KAAA,QAAMQ,SAAUpC,EAAMiD,OAAOb,SAAUE,SAAUrC,EAAUiD,UAG7DlB,EAAAA,EAAAA,MAAA,SACEmB,IAAK9C,EACLc,SAAU,CAAC,MAAO,OAAQ,OAC1Bc,SAAU,CAACvC,KAAKC,GAAK,EAAGD,KAAKC,GAAK,EAAG,GACrCwC,MAAO,EAAE,OAAQ,MAAO,OACxBiB,eAAgBC,EAAAA,GAChBC,eAAgBC,EAAAA,GAChBC,QApDY,SAACC,GACnB,IAEMC,GAFW/C,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,YAGhClB,KAAKiE,MAAMF,EAAEG,QAAUC,EAAAA,GAA+B,EAC7DC,EACJpE,KAAKqE,MAAuC,KAAhCL,EAAcM,OAAOC,UAAkB,IAErDrD,EAAAA,EAAAA,UACEsD,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IACEL,EACAM,EAAAA,GACA7C,EAAAA,KAIR,EAmC6BQ,SAAA,EAErBH,EAAAA,EAAAA,KAAA,QACEQ,SAAUpC,EAAMqE,WAAWjC,SAC3BE,SAAUrC,EAAUqE,YAEtB1C,EAAAA,EAAAA,KAAA,QACEQ,SAAUpC,EAAMuE,WAAWnC,SAC3BE,SAAUrC,EAAU8C,sBAIxBnB,EAAAA,EAAAA,KAAA,QACEuB,IAAK/C,EACLgC,SAAUpC,EAAMwE,MAAMpC,SACtBE,SAAUrC,EAAUuE,MACpBrD,SAAU,CAAC,MAAO,MAAO,OACzBc,SAAU,CAAC,GAAIvC,KAAKC,GAAK,EAAG,GAC5BwC,MAAO,CAAC,KAAM,KAAM,MACpBsC,QA7EiB,WACvB,IAAM5D,GAAkBC,EAAAA,EAAAA,IAAmCF,EAAAA,EAAAA,YAE3DA,EAAAA,EAAAA,UAAe8D,EAAAA,EAAAA,KAAiC7D,GAClD,EA0EQuC,eAAgBuB,EAAAA,GAChBrB,eAAgBC,EAAAA,MAGlB3B,EAAAA,EAAAA,KAACgD,EAAAA,EAAI,CACHzB,IAAKjD,EACL2E,SAAU,GACVC,MAAM,UACN3C,MAAO,CAAC,GAAK,EAAG,GAChBhB,SAAU,EAAE,GAAI,IAAK,KACrB4D,KAAK,iFAAgFhD,SAEpF,OAGHH,EAAAA,EAAAA,KAACoD,EAAAA,GAAsB,CACrBC,SAAS,iBACT9D,SAAU,IAAI1B,EAAAA,SAAe,GAAI,GAAI,QAGvCmC,EAAAA,EAAAA,KAACoD,EAAAA,GAAsB,CACrBC,SAAS,iBACT9D,SAAU,IAAI1B,EAAAA,QAAc,EAAG,GAAI,YAK7C,C","sources":["models/CurrentSource/CurrentSource.tsx"],"sourcesContent":["import * as THREE from 'three'\nimport { store } from 'src/store'\nimport { GLTF } from 'three-stdlib'\nimport React, { useRef } from 'react'\nimport { Text, useGLTF } from '@react-three/drei'\nimport { degToRad } from 'three/src/math/MathUtils'\nimport { TerminalConnectingZone } from '@components'\nimport CurrentSourceModelPath from './currentSource.glb'\nimport { useFrame, ThreeEvent } from '@react-three/fiber'\nimport {\n  setCurrentSourceAmperage,\n  setCurrentSourceIsPowerSupplied,\n} from '@slices'\nimport {\n  selectCurrentSourceAmperage,\n  selectCurrentSourceIsPowerSupplied,\n} from '@selectors'\nimport {\n  CURRENT_SOURCE_AMPERAGE_MAX,\n  CURRENT_SOURCE_AMPERAGE_MIN,\n  CURRENT_SOURCE_AMPERAGE_STEP,\n} from '@constants'\nimport {\n  numberBetween,\n  setDefaultCursor,\n  setPointerCursor,\n  setRotationCursor,\n  addInsignificantZeros,\n} from '@utils'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cube: THREE.Mesh\n    Cube_1: THREE.Mesh\n    Cube_2: THREE.Mesh\n    Cube_3: THREE.Mesh\n    Cube_4: THREE.Mesh\n    Cube_5: THREE.Mesh\n    Cube_6: THREE.Mesh\n    Cylinder_1: THREE.Mesh\n    Cylinder_2: THREE.Mesh\n    power: THREE.Mesh\n  }\n  materials: {\n    backgrond: THREE.MeshStandardMaterial\n    white: THREE.MeshStandardMaterial\n    very_gray: THREE.MeshStandardMaterial\n    black: THREE.MeshStandardMaterial\n    tabl_background: THREE.MeshStandardMaterial\n    ['blue.001']: THREE.MeshStandardMaterial\n    red: THREE.MeshStandardMaterial\n    Material: THREE.MeshStandardMaterial\n    power: THREE.MeshStandardMaterial\n  }\n}\n\nconst powerBtnPositionZ = 106.5\n\nconst amperageSwitchRotation = new THREE.Euler(Math.PI / 2, Math.PI / 2, 0)\n\nconst CurrentSource = (props: JSX.IntrinsicElements['group']) => {\n  const { nodes, materials } = useGLTF(CurrentSourceModelPath) as GLTFResult\n\n  const textRef = useRef<Text & { text: string }>()\n  const powerBtnRef = useRef<THREE.Mesh>(null)\n  const amperageSwitchRef = useRef<THREE.Group>(null)\n\n  useFrame(() => {\n    const amperage = selectCurrentSourceAmperage(store.getState())\n    const isPowerSupplied = selectCurrentSourceIsPowerSupplied(store.getState())\n\n    if (textRef.current) {\n      textRef.current.text = isPowerSupplied\n        ? addInsignificantZeros(amperage.toFixed(2), 1)\n        : ''\n    }\n\n    powerBtnRef.current?.position?.setZ(\n      isPowerSupplied ? powerBtnPositionZ - 6 : powerBtnPositionZ,\n    )\n\n    const angle =\n      Math.PI / 2 - (Math.PI * amperage) / CURRENT_SOURCE_AMPERAGE_MAX\n\n    amperageSwitchRotation.set(\n      amperageSwitchRotation.x,\n      angle,\n      amperageSwitchRotation.z,\n    )\n\n    amperageSwitchRef.current?.setRotationFromEuler(amperageSwitchRotation)\n  })\n\n  const handlePowerClick = () => {\n    const isPowerSupplied = selectCurrentSourceIsPowerSupplied(store.getState())\n\n    store.dispatch(setCurrentSourceIsPowerSupplied(!isPowerSupplied))\n  }\n\n  const handleWheel = (e: ThreeEvent<WheelEvent>) => {\n    const amperage = selectCurrentSourceAmperage(store.getState())\n\n    const newAmperage =\n      amperage + Math.sign(-e.deltaY) * CURRENT_SOURCE_AMPERAGE_STEP * 3\n    const newRoundedAmperage =\n      Math.round((newAmperage + Number.EPSILON) * 100) / 100\n\n    store.dispatch(\n      setCurrentSourceAmperage(\n        numberBetween(\n          newRoundedAmperage,\n          CURRENT_SOURCE_AMPERAGE_MIN,\n          CURRENT_SOURCE_AMPERAGE_MAX,\n        ),\n      ),\n    )\n  }\n\n  return (\n    <group {...props} dispose={null}>\n      <group position={[0, 6, 0]} rotation={[0, degToRad(30), 0]}>\n        <group\n          position={[-0.37, 106.12, 0.09]}\n          rotation={[0, -Math.PI / 2, 0]}\n          scale={[101.5, 111.61, 114.5]}\n        >\n          <mesh geometry={nodes.Cube.geometry} material={materials.backgrond} />\n          <mesh geometry={nodes.Cube_1.geometry} material={materials.white} />\n          <mesh\n            geometry={nodes.Cube_2.geometry}\n            material={materials.very_gray}\n          />\n          <mesh geometry={nodes.Cube_3.geometry} material={materials.black} />\n          <mesh\n            geometry={nodes.Cube_4.geometry}\n            material={materials.tabl_background}\n          />\n          <mesh\n            geometry={nodes.Cube_5.geometry}\n            material={materials['blue.001']}\n          />\n          <mesh geometry={nodes.Cube_6.geometry} material={materials.red} />\n        </group>\n\n        <group\n          ref={amperageSwitchRef}\n          position={[68.25, 145.31, 110.7]}\n          rotation={[Math.PI / 2, Math.PI / 2, 0]}\n          scale={[-17.51, -8.23, -17.51]}\n          onPointerEnter={setRotationCursor}\n          onPointerLeave={setDefaultCursor}\n          onWheel={handleWheel}\n        >\n          <mesh\n            geometry={nodes.Cylinder_1.geometry}\n            material={materials.Material}\n          />\n          <mesh\n            geometry={nodes.Cylinder_2.geometry}\n            material={materials.tabl_background}\n          />\n        </group>\n\n        <mesh\n          ref={powerBtnRef}\n          geometry={nodes.power.geometry}\n          material={materials.power}\n          position={[68.25, 58.92, 106.5]}\n          rotation={[0, -Math.PI / 2, 0]}\n          scale={[3.92, 5.58, 5.58]}\n          onClick={handlePowerClick}\n          onPointerEnter={setPointerCursor}\n          onPointerLeave={setDefaultCursor}\n        />\n\n        <Text\n          ref={textRef}\n          fontSize={34}\n          color='#F44336'\n          scale={[0.7, 1, 1]}\n          position={[-33, 152, 102]}\n          font='https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff/FiraCode-Light.woff'\n        >\n          {' '}\n        </Text>\n\n        <TerminalConnectingZone\n          terminal='CurrentSource+'\n          position={new THREE.Vector3(-68, 68, 116)}\n        />\n\n        <TerminalConnectingZone\n          terminal='CurrentSource-'\n          position={new THREE.Vector3(0, 68, 116)}\n        />\n      </group>\n    </group>\n  )\n}\n\nexport default CurrentSource\n"],"names":["amperageSwitchRotation","THREE","Math","PI","props","_ref","useGLTF","CurrentSourceModelPath","nodes","materials","textRef","useRef","powerBtnRef","amperageSwitchRef","useFrame","_powerBtnRef$current","_powerBtnRef$current$","_amperageSwitchRef$cu","amperage","selectCurrentSourceAmperage","store","isPowerSupplied","selectCurrentSourceIsPowerSupplied","current","text","addInsignificantZeros","toFixed","position","setZ","powerBtnPositionZ","angle","CURRENT_SOURCE_AMPERAGE_MAX","set","x","z","setRotationFromEuler","_jsx","_objectSpread","dispose","children","_jsxs","rotation","degToRad","scale","geometry","Cube","material","backgrond","Cube_1","white","Cube_2","very_gray","Cube_3","black","Cube_4","tabl_background","Cube_5","Cube_6","red","ref","onPointerEnter","setRotationCursor","onPointerLeave","setDefaultCursor","onWheel","e","newAmperage","sign","deltaY","CURRENT_SOURCE_AMPERAGE_STEP","newRoundedAmperage","round","Number","EPSILON","setCurrentSourceAmperage","numberBetween","CURRENT_SOURCE_AMPERAGE_MIN","Cylinder_1","Material","Cylinder_2","power","onClick","setCurrentSourceIsPowerSupplied","setPointerCursor","Text","fontSize","color","font","TerminalConnectingZone","terminal"],"sourceRoot":""}