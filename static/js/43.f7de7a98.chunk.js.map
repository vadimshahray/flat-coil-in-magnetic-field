{"version":3,"file":"static/js/43.f7de7a98.chunk.js","mappings":"wVAuDMA,EAAyB,IAAIC,EAAAA,MAAYC,KAAKC,GAAK,EAAGD,KAAKC,GAAK,EAAG,GA0IzE,EAxIsB,SAACC,GACrB,IAAAC,GAA6BC,EAAAA,EAAAA,GAAQC,GAA7BC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAETC,GAAUC,EAAAA,EAAAA,UACVC,GAAcD,EAAAA,EAAAA,QAAmB,MACjCE,GAAoBF,EAAAA,EAAAA,QAAoB,OAE9CG,EAAAA,EAAAA,IAAS,WAAO,IAADC,EAAAC,EAAAC,EACPC,GAAWC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,YACvCC,GAAkBC,EAAAA,EAAAA,IAAmCF,EAAAA,EAAAA,YAEvDV,EAAQa,UACVb,EAAQa,QAAQC,KAAOH,GACnBI,EAAAA,EAAAA,IAAsBP,EAASQ,QAAQ,GAAI,GAC3C,IAGa,QAAnBX,EAAAH,EAAYW,eAAO,IAAAR,GAAU,QAAVC,EAAnBD,EAAqBY,gBAAQ,IAAAX,GAA7BA,EAA+BY,KAC7BP,EAAkBQ,KAtBE,OAyBtB,IAAMC,EACJ5B,KAAKC,GAAK,EAAKD,KAAKC,GAAKe,EAAYa,EAAAA,GAEvC/B,EAAuBgC,IACrBhC,EAAuBiC,EACvBH,EACA9B,EAAuBkC,GAGA,QAAzBjB,EAAAJ,EAAkBU,eAAO,IAAAN,GAAzBA,EAA2BkB,qBAAqBnC,EAClD,IA0BA,OACEoC,EAAAA,EAAAA,MAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWjC,GAAK,IAAEkC,QAAS,KAAKC,SAAA,EAC9BH,EAAAA,EAAAA,MAAA,SACEI,IAAK3B,EACLc,SAAU,CAAC,KAAM,KAAM,QACvBc,SAAU,CAACvC,KAAKC,GAAK,EAAG,EAAG,GAC3BuC,MAAO,EAAE,OAAQ,MAAO,OACxBC,eAAgBC,EAAAA,GAChBC,eAAgBC,EAAAA,GAChBC,QA3Bc,SAACC,GACnB,IAEMC,GAFW9B,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,YAGhClB,KAAKgD,MAAMF,EAAEG,QAAUC,EAAAA,GAA+B,EAC7DC,EACJnD,KAAKoD,MAAuC,KAAhCL,EAAcM,OAAOC,UAAkB,IAErDpC,EAAAA,EAAAA,UACEqC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IACEL,EACAM,EAAAA,GACA5B,EAAAA,KAIR,EAU2BQ,SAAA,EAErBqB,EAAAA,EAAAA,KAAA,QACEC,SAAUrD,EAAMsD,YAAYD,SAC5BE,SAAUtD,EAAUuD,mBAEtBJ,EAAAA,EAAAA,KAAA,QACEC,SAAUrD,EAAMyD,cAAcJ,SAC9BE,SAAUtD,EAAUyD,iBAIxBN,EAAAA,EAAAA,KAAA,QACEpB,IAAK5B,EACLiD,SAAUrD,EAAM2D,MAAMN,SACtBE,SAAUtD,EAAU0D,MACpBxC,SAAU,CAAC,MAAO,IAAM,QACxBc,SAAU,CAAC,GAAIvC,KAAKC,GAAK,EAAG,GAC5BuC,MAAO,CAAC,KAAM,KAAM,MACpB0B,QApDmB,WACvB,IAAM/C,GAAkBC,EAAAA,EAAAA,IAAmCF,EAAAA,EAAAA,YAE3DA,EAAAA,EAAAA,UAAeiD,EAAAA,EAAAA,KAAiChD,GAClD,EAiDMsB,eAAgB2B,EAAAA,GAChBzB,eAAgBC,EAAAA,MAElBV,EAAAA,EAAAA,MAAA,SACET,SAAU,CAAC,OAAQ,MAAO,OAC1Bc,SAAU,CAACvC,KAAKC,GAAK,EAAG,EAAG,GAC3BuC,MAAO,CAAC,KAAM,OAAQ,MAAMH,SAAA,EAE5BqB,EAAAA,EAAAA,KAAA,QACEC,SAAUrD,EAAM+D,QAAQV,SACxBE,SAAUtD,EAAUyD,cAEtBN,EAAAA,EAAAA,KAAA,QAAMC,SAAUrD,EAAMgE,UAAUX,SAAUE,SAAUtD,EAAUgE,UAC9Db,EAAAA,EAAAA,KAAA,QAAMC,SAAUrD,EAAMkE,UAAUb,SAAUE,SAAUtD,EAAUkE,QAC9Df,EAAAA,EAAAA,KAAA,QAAMC,SAAUrD,EAAMoE,UAAUf,SAAUE,SAAUtD,EAAUoE,QAC9DjB,EAAAA,EAAAA,KAAA,QACEC,SAAUrD,EAAMsE,UAAUjB,SAC1BE,SAAUtD,EAAUsE,cAEtBnB,EAAAA,EAAAA,KAAA,QAAMC,SAAUrD,EAAMwE,UAAUnB,SAAUE,SAAUtD,EAAUwE,YAGhErB,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CACH1C,IAAK9B,EACLyE,SAAU,GACVC,MAAM,UACN1C,MAAO,CAAC,GAAK,EAAG,GAChBf,SAAU,EAAE,IAAK,EAAG,KACpB0D,KAAK,iFAAgF9C,SAEpF,OAGHqB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAsB,CACrBC,SAAS,iBACTH,MAAM,UACNI,KAAM,GACN7D,SAAU,CAAC,GAAI,EAAG,QAGpBiC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAsB,CACrBC,SAAS,iBACTH,MAAM,UACNI,KAAM,GACN7D,SAAU,CAAC,GAAI,EAAG,UAI1B,C","sources":["models/CurrentSource/CurrentSource.tsx"],"sourcesContent":["import * as THREE from 'three'\nimport { store } from 'src/store'\nimport { GLTF } from 'three-stdlib'\nimport React, { useRef } from 'react'\nimport { Text, useGLTF } from '@react-three/drei'\nimport { TerminalConnectingZone } from '@components'\nimport CurrentSourceModelPath from './currentSource.glb'\nimport { useFrame, ThreeEvent } from '@react-three/fiber'\nimport {\n  setCurrentSourceAmperage,\n  setCurrentSourceIsPowerSupplied,\n} from '@slices'\nimport {\n  selectCurrentSourceAmperage,\n  selectCurrentSourceIsPowerSupplied,\n} from '@selectors'\nimport {\n  CURRENT_SOURCE_AMPERAGE_MAX,\n  CURRENT_SOURCE_AMPERAGE_MIN,\n  CURRENT_SOURCE_AMPERAGE_STEP,\n} from '@constants'\nimport {\n  numberBetween,\n  setDefaultCursor,\n  setPointerCursor,\n  setRotationCursor,\n  addInsignificantZeros,\n} from '@utils'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cylinder002: THREE.Mesh\n    Cylinder002_1: THREE.Mesh\n    power: THREE.Mesh\n    Text008: THREE.Mesh\n    Text008_1: THREE.Mesh\n    Text008_2: THREE.Mesh\n    Text008_3: THREE.Mesh\n    Text008_4: THREE.Mesh\n    Text008_5: THREE.Mesh\n  }\n  materials: {\n    tabl_background: THREE.MeshStandardMaterial\n    Black_line: THREE.MeshStandardMaterial\n    power: THREE.MeshStandardMaterial\n    metall: THREE.MeshPhysicalMaterial\n    blue: THREE.MeshStandardMaterial\n    grey: THREE.MeshStandardMaterial\n    black_line: THREE.MeshStandardMaterial\n    black: THREE.MeshStandardMaterial\n  }\n}\n\nconst powerBtnPositionZ = 103.5\n\nconst amperageSwitchRotation = new THREE.Euler(Math.PI / 2, Math.PI / 2, 0)\n\nconst CurrentSource = (props: JSX.IntrinsicElements['group']) => {\n  const { nodes, materials } = useGLTF(CurrentSourceModelPath) as GLTFResult\n\n  const textRef = useRef<Text & { text: string }>()\n  const powerBtnRef = useRef<THREE.Mesh>(null)\n  const amperageSwitchRef = useRef<THREE.Group>(null)\n\n  useFrame(() => {\n    const amperage = selectCurrentSourceAmperage(store.getState())\n    const isPowerSupplied = selectCurrentSourceIsPowerSupplied(store.getState())\n\n    if (textRef.current) {\n      textRef.current.text = isPowerSupplied\n        ? addInsignificantZeros(amperage.toFixed(2), 1)\n        : ''\n    }\n\n    powerBtnRef.current?.position?.setZ(\n      isPowerSupplied ? powerBtnPositionZ - 6 : powerBtnPositionZ,\n    )\n\n    const angle =\n      Math.PI / 2 - (Math.PI * amperage) / CURRENT_SOURCE_AMPERAGE_MAX\n\n    amperageSwitchRotation.set(\n      amperageSwitchRotation.x,\n      angle,\n      amperageSwitchRotation.z,\n    )\n\n    amperageSwitchRef.current?.setRotationFromEuler(amperageSwitchRotation)\n  })\n\n  const handlePowerClick = () => {\n    const isPowerSupplied = selectCurrentSourceIsPowerSupplied(store.getState())\n\n    store.dispatch(setCurrentSourceIsPowerSupplied(!isPowerSupplied))\n  }\n\n  const handleWheel = (e: ThreeEvent<WheelEvent>) => {\n    const amperage = selectCurrentSourceAmperage(store.getState())\n\n    const newAmperage =\n      amperage + Math.sign(-e.deltaY) * CURRENT_SOURCE_AMPERAGE_STEP * 3\n    const newRoundedAmperage =\n      Math.round((newAmperage + Number.EPSILON) * 100) / 100\n\n    store.dispatch(\n      setCurrentSourceAmperage(\n        numberBetween(\n          newRoundedAmperage,\n          CURRENT_SOURCE_AMPERAGE_MIN,\n          CURRENT_SOURCE_AMPERAGE_MAX,\n        ),\n      ),\n    )\n  }\n  return (\n    <group {...props} dispose={null}>\n      <group\n        ref={amperageSwitchRef}\n        position={[5.84, 1.85, 105.19]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[-12.81, -6.02, -12.81]}\n        onPointerEnter={setRotationCursor}\n        onPointerLeave={setDefaultCursor}\n        onWheel={handleWheel}\n      >\n        <mesh\n          geometry={nodes.Cylinder002.geometry}\n          material={materials.tabl_background}\n        />\n        <mesh\n          geometry={nodes.Cylinder002_1.geometry}\n          material={materials.Black_line}\n        />\n      </group>\n\n      <mesh\n        ref={powerBtnRef}\n        geometry={nodes.power.geometry}\n        material={materials.power}\n        position={[94.96, 0.85, 102.85]}\n        rotation={[0, -Math.PI / 2, 0]}\n        scale={[3.92, 5.58, 5.58]}\n        onClick={handlePowerClick}\n        onPointerEnter={setPointerCursor}\n        onPointerLeave={setDefaultCursor}\n      />\n      <group\n        position={[32.91, -11.31, 99.86]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[6.64, 107.72, 6.64]}\n      >\n        <mesh\n          geometry={nodes.Text008.geometry}\n          material={materials.Black_line}\n        />\n        <mesh geometry={nodes.Text008_1.geometry} material={materials.metall} />\n        <mesh geometry={nodes.Text008_2.geometry} material={materials.blue} />\n        <mesh geometry={nodes.Text008_3.geometry} material={materials.grey} />\n        <mesh\n          geometry={nodes.Text008_4.geometry}\n          material={materials.black_line}\n        />\n        <mesh geometry={nodes.Text008_5.geometry} material={materials.black} />\n      </group>\n\n      <Text\n        ref={textRef}\n        fontSize={34}\n        color='#F44336'\n        scale={[0.7, 1, 1]}\n        position={[-73, -1, 102]}\n        font='https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff/FiraCode-Light.woff'\n      >\n        {' '}\n      </Text>\n\n      <TerminalConnectingZone\n        terminal='CurrentSource+'\n        color='#832D2E'\n        size={16}\n        position={[66, 0, 108]}\n      />\n\n      <TerminalConnectingZone\n        terminal='CurrentSource-'\n        color='#4C4C8A'\n        size={16}\n        position={[39, 0, 108]}\n      />\n    </group>\n  )\n}\n\nexport default CurrentSource\n"],"names":["amperageSwitchRotation","THREE","Math","PI","props","_ref","useGLTF","CurrentSourceModelPath","nodes","materials","textRef","useRef","powerBtnRef","amperageSwitchRef","useFrame","_powerBtnRef$current","_powerBtnRef$current$","_amperageSwitchRef$cu","amperage","selectCurrentSourceAmperage","store","isPowerSupplied","selectCurrentSourceIsPowerSupplied","current","text","addInsignificantZeros","toFixed","position","setZ","powerBtnPositionZ","angle","CURRENT_SOURCE_AMPERAGE_MAX","set","x","z","setRotationFromEuler","_jsxs","_objectSpread","dispose","children","ref","rotation","scale","onPointerEnter","setRotationCursor","onPointerLeave","setDefaultCursor","onWheel","e","newAmperage","sign","deltaY","CURRENT_SOURCE_AMPERAGE_STEP","newRoundedAmperage","round","Number","EPSILON","setCurrentSourceAmperage","numberBetween","CURRENT_SOURCE_AMPERAGE_MIN","_jsx","geometry","Cylinder002","material","tabl_background","Cylinder002_1","Black_line","power","onClick","setCurrentSourceIsPowerSupplied","setPointerCursor","Text008","Text008_1","metall","Text008_2","blue","Text008_3","grey","Text008_4","black_line","Text008_5","black","Text","fontSize","color","font","TerminalConnectingZone","terminal","size"],"sourceRoot":""}