{"version":3,"file":"static/js/511.30a196dc.chunk.js","mappings":"gSA+DA,EAxCa,SAACA,GACZ,IAAAC,GAA6BC,EAAAA,EAAAA,GAAQC,GAA7BC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAETC,GAAMC,EAAAA,EAAAA,QAAmB,MAiB/B,OAfAC,EAAAA,EAAAA,IAAS,WACP,IAAMC,EAAQC,EAAAA,EAAAA,WAEd,GAAKJ,EAAIK,QAAT,CAEA,GAAoC,UAAhCC,EAAAA,EAAAA,GAAqBH,GACvB,OAAQH,EAAIK,QAAQE,SAASC,EAAIC,KAAKC,GAAK,EAE7C,GAAoC,aAAhCJ,EAAAA,EAAAA,GAAqBH,GAAzB,CAEA,IAAMQ,EAAoD,UAAxCC,EAAAA,EAAAA,GAA6BT,GAAoB,GAAK,EAExEH,EAAIK,QAAQQ,QAASF,GAAYG,EAAAA,EAAAA,GAA6BX,GAAU,GAJnB,CAL7B,CAU1B,KAGEY,EAAAA,EAAAA,MAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWtB,GAAK,IAAEuB,QAAS,KAAMC,MAAO,IAAIC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QACEC,SAAUvB,EAAMwB,KAAKD,SACrBE,SAAUxB,EAAUyB,SACpBN,MAAO,CAAC,IAAM,IAAM,QAGtBE,EAAAA,EAAAA,KAAA,QACEpB,IAAKA,EACLqB,SAAUvB,EAAM2B,QAAQJ,SACxBE,SAAUzB,EAAM2B,QAAQF,SACxBG,SAAU,CAAC,EAAG,IAAM,GACpBnB,SAAU,CAACE,KAAKC,GAAK,EAAG,EAAG,GAC3BQ,MAAO,CAAC,IAAM,IAAM,UAI5B,C","sources":["models/Coil/Coil.tsx"],"sourcesContent":["import * as THREE from 'three'\r\nimport { store } from 'src/store'\r\nimport { GLTF } from 'three-stdlib'\r\nimport React, { useRef } from 'react'\r\nimport CoilModelPath from './coil.glb'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport {\r\n  selectModelingStatus,\r\n  selectMotorRotationDirection,\r\n  selectMotorRotationFrequency,\r\n} from '@selectors'\r\n\r\ntype GLTFResult = GLTF & {\r\n  nodes: {\r\n    Cube: THREE.Mesh\r\n    Cube001: THREE.Mesh\r\n  }\r\n  materials: {\r\n    Material: THREE.MeshStandardMaterial\r\n  }\r\n}\r\n\r\nconst Coil = (props: JSX.IntrinsicElements['group']) => {\r\n  const { nodes, materials } = useGLTF(CoilModelPath) as GLTFResult\r\n\r\n  const ref = useRef<THREE.Mesh>(null)\r\n\r\n  useFrame(() => {\r\n    const state = store.getState()\r\n\r\n    if (!ref.current) return\r\n\r\n    if (selectModelingStatus(state) === 'idle')\r\n      return (ref.current.rotation.x = Math.PI / 2)\r\n\r\n    if (selectModelingStatus(state) !== 'started') return\r\n\r\n    const direction = selectMotorRotationDirection(state) === 'left' ? 1 : -1\r\n\r\n    ref.current.rotateX((direction * selectMotorRotationFrequency(state)) / 10)\r\n  })\r\n\r\n  return (\r\n    <group {...props} dispose={null} scale={110}>\r\n      <mesh\r\n        geometry={nodes.Cube.geometry}\r\n        material={materials.Material}\r\n        scale={[0.98, 0.44, 0.19]}\r\n      />\r\n\r\n      <mesh\r\n        ref={ref}\r\n        geometry={nodes.Cube001.geometry}\r\n        material={nodes.Cube001.material}\r\n        position={[0, 0.27, 0]}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n        scale={[0.69, 0.23, 0.01]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default Coil\r\n"],"names":["props","_ref","useGLTF","CoilModelPath","nodes","materials","ref","useRef","useFrame","state","store","current","selectModelingStatus","rotation","x","Math","PI","direction","selectMotorRotationDirection","rotateX","selectMotorRotationFrequency","_jsxs","_objectSpread","dispose","scale","children","_jsx","geometry","Cube","material","Material","Cube001","position"],"sourceRoot":""}