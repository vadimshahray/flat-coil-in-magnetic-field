{"version":3,"file":"static/js/511.51d6c342.chunk.js","mappings":"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","sources":["models/Coil/Coil.tsx"],"sourcesContent":["import * as THREE from 'three'\r\nimport { store } from 'src/store'\r\nimport { GLTF } from 'three-stdlib'\r\nimport React, { useRef } from 'react'\r\nimport CoilModelPath from './coil.glb'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { TerminalConnectingZone } from '@components'\r\nimport { selectEngineIsPowerSupplied } from '@selectors'\r\n\r\ntype GLTFResult = GLTF & {\r\n  nodes: {\r\n    handle: THREE.Mesh\r\n    axis: THREE.Mesh\r\n    Cube024: THREE.Mesh\r\n    Cube024_1: THREE.Mesh\r\n    Cube024_2: THREE.Mesh\r\n    Cube013: THREE.Mesh\r\n    Cube013_1: THREE.Mesh\r\n    Cube013_2: THREE.Mesh\r\n    Cube013_3: THREE.Mesh\r\n    Cube013_4: THREE.Mesh\r\n    Cube013_5: THREE.Mesh\r\n  }\r\n  materials: {\r\n    metallic: THREE.MeshStandardMaterial\r\n    cu: THREE.MeshPhysicalMaterial\r\n    grey_plastic: THREE.MeshPhysicalMaterial\r\n    au: THREE.MeshStandardMaterial\r\n    blue: THREE.MeshStandardMaterial\r\n    very_grey_plastic: THREE.MeshStandardMaterial\r\n    legs: THREE.MeshStandardMaterial\r\n  }\r\n}\r\n\r\nconst WoodBlock = React.lazy(() => import('src/models/WoodBlock'))\r\n\r\nconst Coil = (props: JSX.IntrinsicElements['group']) => {\r\n  const { nodes, materials } = useGLTF(CoilModelPath) as GLTFResult\r\n\r\n  const ref = useRef<THREE.Group>(null)\r\n\r\n  materials.grey_plastic.color = {\r\n    isColor: true,\r\n    b: 0.76,\r\n    g: 0.76,\r\n    r: 0.76,\r\n  } as THREE.Color\r\n  materials.grey_plastic.roughness = 1\r\n\r\n  console.log(materials.grey_plastic)\r\n\r\n  useFrame(() => {\r\n    const state = store.getState()\r\n\r\n    if (!selectEngineIsPowerSupplied(state)) return\r\n\r\n    ref.current?.rotateZ(0.3)\r\n  })\r\n\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group position={[0, -160, 0]}>\r\n        <group position={[0, 70, 0]}>\r\n          <group scale={[4.6, 4, 4]}>\r\n            <mesh\r\n              geometry={nodes.handle.geometry}\r\n              material={materials.metallic}\r\n              position={[29.98, 32.56, -0.21]}\r\n              rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n              scale={[0.83, 21.06, 0.83]}\r\n            />\r\n            <mesh\r\n              geometry={nodes.axis.geometry}\r\n              material={materials.metallic}\r\n              position={[29.98, 32.56, -0.21]}\r\n              rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n              scale={[0.83, 4.06, 0.83]}\r\n            />\r\n            <group\r\n              ref={ref}\r\n              position={[-0.26, 32.57, -0.21]}\r\n              rotation={[Math.PI, -Math.PI / 2, 0]}\r\n              scale={[-1.33, -8.07, -10.76]}\r\n            >\r\n              <mesh geometry={nodes.Cube024.geometry} material={materials.cu} />\r\n              <mesh\r\n                geometry={nodes.Cube024_1.geometry}\r\n                material={materials.grey_plastic}\r\n              />\r\n              <mesh\r\n                geometry={nodes.Cube024_2.geometry}\r\n                material={nodes.Cube024_2.material}\r\n              />\r\n            </group>\r\n            <group\r\n              position={[-3.67, 19.62, -0.21]}\r\n              rotation={[0, Math.PI / 2, 0]}\r\n              scale={[5.41, 1.2, 3.16]}\r\n            >\r\n              <mesh\r\n                geometry={nodes.Cube013.geometry}\r\n                material={materials.grey_plastic}\r\n              />\r\n              <mesh\r\n                geometry={nodes.Cube013_1.geometry}\r\n                material={materials.au}\r\n              />\r\n              <mesh\r\n                geometry={nodes.Cube013_2.geometry}\r\n                material={materials.metallic}\r\n              />\r\n              <mesh\r\n                geometry={nodes.Cube013_3.geometry}\r\n                material={materials.blue}\r\n              />\r\n              <mesh\r\n                geometry={nodes.Cube013_4.geometry}\r\n                material={materials.very_grey_plastic}\r\n              />\r\n              <mesh\r\n                geometry={nodes.Cube013_5.geometry}\r\n                material={materials.legs}\r\n              />\r\n            </group>\r\n          </group>\r\n\r\n          <TerminalConnectingZone\r\n            terminal='Coil+'\r\n            color='#832D2E'\r\n            rotation={[0, Math.PI / 2, 0]}\r\n            position={[135, 96, 0]}\r\n          />\r\n\r\n          <TerminalConnectingZone\r\n            terminal='Coil-'\r\n            color='#4C4C8A'\r\n            rotation={[0, -Math.PI / 2, 0]}\r\n            position={[-137, 96, 0]}\r\n          />\r\n        </group>\r\n\r\n        <WoodBlock args={[50, 70, 120]} position={[-135, 35, 0]} />\r\n\r\n        <WoodBlock args={[50, 70, 120]} position={[135, 35, 0]} />\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default Coil\r\n"],"names":["WoodBlock","React","props","_ref","useGLTF","CoilModelPath","nodes","materials","ref","useRef","grey_plastic","color","isColor","b","g","r","roughness","console","log","useFrame","_ref$current","state","store","selectEngineIsPowerSupplied","current","rotateZ","_jsx","_objectSpread","dispose","children","_jsxs","position","scale","geometry","handle","material","metallic","rotation","Math","PI","axis","Cube024","cu","Cube024_1","Cube024_2","Cube013","Cube013_1","au","Cube013_2","Cube013_3","blue","Cube013_4","very_grey_plastic","Cube013_5","legs","TerminalConnectingZone","terminal","args"],"sourceRoot":""}