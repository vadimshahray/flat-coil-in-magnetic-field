{"version":3,"file":"static/js/189.58b5197d.chunk.js","mappings":"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","sources":["models/Engine/Engine.tsx"],"sourcesContent":["import * as THREE from 'three'\nimport { store } from 'src/store'\nimport { GLTF } from 'three-stdlib'\nimport React, { useRef } from 'react'\nimport EngineModelPath from './engine.glb'\nimport { useFrame } from '@react-three/fiber'\nimport { Text, useGLTF } from '@react-three/drei'\nimport { setDefaultCursor, setPointerCursor } from '@utils'\nimport { setEngineIsPowerSupplied, setEngineRotationFrequency } from '@slices'\nimport {\n  selectEngineIsPowerSupplied,\n  selectEngineRotationFrequency,\n} from '@selectors'\nimport {\n  ENGINE_ROTATION_FREQUENCY_MAX,\n  ENGINE_ROTATION_FREQUENCY_MIN,\n  ENGINE_ROTATION_FREQUENCY_STEP,\n} from '@constants'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cylinder_1: THREE.Mesh\n    Cylinder_2: THREE.Mesh\n    Cylinder_3: THREE.Mesh\n    green_button_1: THREE.Mesh\n    green_button_2: THREE.Mesh\n    button_on: THREE.Mesh\n  }\n  materials: {\n    metallic: THREE.MeshPhysicalMaterial\n    black: THREE.MeshPhysicalMaterial\n    grey_tabl: THREE.MeshStandardMaterial\n    grey_button: THREE.MeshStandardMaterial\n    red: THREE.MeshStandardMaterial\n  }\n}\n\nconst WoodBlock = React.lazy(() => import('src/models/WoodBlock'))\n\nconst powerBtnInitX = 266.74\n\nconst Engine = (props: JSX.IntrinsicElements['group']) => {\n  const { nodes, materials } = useGLTF(EngineModelPath) as GLTFResult\n\n  const textRef = useRef<Text & { text: string }>()\n  const textSIRef = useRef<THREE.Mesh>()\n  const powerBtnRef = useRef<THREE.Mesh>(null)\n\n  useFrame(() => {\n    const isPowerSupplied = selectEngineIsPowerSupplied(store.getState())\n\n    if (textRef.current) {\n      textRef.current.text = isPowerSupplied\n        ? selectEngineRotationFrequency(store.getState()).toString()\n        : ''\n    }\n\n    if (textSIRef.current) {\n      textSIRef.current.visible = isPowerSupplied\n    }\n\n    if (powerBtnRef.current) {\n      powerBtnRef.current.position.setX(\n        isPowerSupplied ? powerBtnInitX - 10 : powerBtnInitX,\n      )\n    }\n  })\n\n  const handlePowerClick = () => {\n    const isPowerSupplied = selectEngineIsPowerSupplied(store.getState())\n\n    store.dispatch(setEngineIsPowerSupplied(!isPowerSupplied))\n  }\n\n  const handleFrequencyUpClick = () => {\n    const frequency = selectEngineRotationFrequency(store.getState())\n\n    store.dispatch(\n      setEngineRotationFrequency(\n        Math.min(\n          ENGINE_ROTATION_FREQUENCY_MAX,\n          frequency + ENGINE_ROTATION_FREQUENCY_STEP,\n        ),\n      ),\n    )\n  }\n\n  const handleFrequencyDownClick = () => {\n    const frequency = selectEngineRotationFrequency(store.getState())\n\n    store.dispatch(\n      setEngineRotationFrequency(\n        Math.max(\n          ENGINE_ROTATION_FREQUENCY_MIN,\n          frequency - ENGINE_ROTATION_FREQUENCY_STEP,\n        ),\n      ),\n    )\n  }\n\n  return (\n    <group {...props} dispose={null}>\n      <group position={[-10, 107, 3]}>\n        <group scale={0.4} position={[0, 4, 0]}>\n          <group\n            position={[49.94, 220.64, -22.82]}\n            rotation={[-Math.PI, 0, -Math.PI / 2]}\n            scale={[191.14, 328.3, 191.14]}\n          >\n            <mesh\n              geometry={nodes.Cylinder_1.geometry}\n              material={materials.metallic}\n            />\n            <mesh\n              geometry={nodes.Cylinder_2.geometry}\n              material={materials.black}\n            />\n            <mesh\n              geometry={nodes.Cylinder_3.geometry}\n              material={materials.grey_tabl}\n            />\n          </group>\n          <mesh\n            geometry={nodes.green_button_1.geometry}\n            material={materials.grey_button}\n            position={[215.46, 274.68, 295.22]}\n            rotation={[0, -Math.PI / 2, 0]}\n            scale={[3.61, 19.76, 19.78]}\n            onClick={handleFrequencyUpClick}\n            onPointerEnter={setPointerCursor}\n            onPointerLeave={setDefaultCursor}\n          />\n          <mesh\n            geometry={nodes.green_button_2.geometry}\n            material={materials.grey_button}\n            position={[215.46, 205.34, 295.22]}\n            rotation={[-Math.PI, -Math.PI / 2, 0]}\n            scale={[3.61, 19.76, 19.78]}\n            onClick={handleFrequencyDownClick}\n            onPointerEnter={setPointerCursor}\n            onPointerLeave={setDefaultCursor}\n          />\n          <mesh\n            ref={powerBtnRef}\n            geometry={nodes.button_on.geometry}\n            material={materials.red}\n            position={[266.74, 298.21, 250.74]}\n            rotation={[Math.PI / 2, 0, Math.PI / 2]}\n            scale={[22.49, 10.95, 15.01]}\n            onClick={handlePowerClick}\n            onPointerEnter={setPointerCursor}\n            onPointerLeave={setDefaultCursor}\n          />\n        </group>\n\n        <group\n          scale={[0.7, 1, 1]}\n          position={[24, 98, 118]}>\n        <Text\n          ref={textRef}\n          fontSize={47}\n          color='red'\n          font='https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff/FiraCode-Light.woff'\n        >\n          {' '}\n        </Text>\n\n        <Text\n          ref={textSIRef}\n          fontSize={20}\n          color='red'\n          position={[44, -8, 0]}\n          font='https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff/FiraCode-Light.woff'\n        >\n          Hz\n          </Text>\n        </group>\n      </group>\n\n      <WoodBlock args={[280, 107, 220]} position={[8, 52, 0]} />\n    </group>\n  )\n}\n\nexport default Engine\n"],"names":["WoodBlock","React","powerBtnInitX","props","_ref","useGLTF","EngineModelPath","nodes","materials","textRef","useRef","textSIRef","powerBtnRef","useFrame","isPowerSupplied","selectEngineIsPowerSupplied","store","current","text","selectEngineRotationFrequency","toString","visible","position","setX","_jsxs","_objectSpread","dispose","children","scale","rotation","Math","PI","_jsx","geometry","Cylinder_1","material","metallic","Cylinder_2","black","Cylinder_3","grey_tabl","green_button_1","grey_button","onClick","frequency","setEngineRotationFrequency","min","ENGINE_ROTATION_FREQUENCY_MAX","ENGINE_ROTATION_FREQUENCY_STEP","onPointerEnter","setPointerCursor","onPointerLeave","setDefaultCursor","green_button_2","max","ENGINE_ROTATION_FREQUENCY_MIN","ref","button_on","red","setEngineIsPowerSupplied","Text","fontSize","color","font","args"],"sourceRoot":""}