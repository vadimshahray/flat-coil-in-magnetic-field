{"version":3,"file":"static/js/189.08a02f05.chunk.js","mappings":"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","sources":["models/Engine/Engine.tsx"],"sourcesContent":["import * as THREE from 'three'\r\nimport { store } from 'src/store'\r\nimport { GLTF } from 'three-stdlib'\r\nimport React, { useRef } from 'react'\r\nimport EngineModelPath from './engine.glb'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { Text, useGLTF } from '@react-three/drei'\r\nimport { setDefaultCursor, setPointerCursor } from '@utils'\r\nimport { setEngineIsPowerSupplied, setEngineRotationFrequency } from '@slices'\r\nimport {\r\n  selectEngineIsPowerSupplied,\r\n  selectEngineRotationFrequency,\r\n} from '@selectors'\r\nimport {\r\n  ENGINE_ROTATION_FREQUENCY_MAX,\r\n  ENGINE_ROTATION_FREQUENCY_MIN,\r\n  ENGINE_ROTATION_FREQUENCY_STEP,\r\n} from '@constants'\r\n\r\ntype GLTFResult = GLTF & {\r\n  nodes: {\r\n    Cube004: THREE.Mesh\r\n    Cube004_1: THREE.Mesh\r\n    Cube004_2: THREE.Mesh\r\n    Cube001: THREE.Mesh\r\n    Cube002: THREE.Mesh\r\n    button_on: THREE.Mesh\r\n    handle_1: THREE.Mesh\r\n  }\r\n  materials: {\r\n    metallic: THREE.MeshPhysicalMaterial\r\n    black: THREE.MeshPhysicalMaterial\r\n    grey_tabl: THREE.MeshStandardMaterial\r\n    grey_button: THREE.MeshStandardMaterial\r\n    red: THREE.MeshStandardMaterial\r\n  }\r\n}\r\n\r\nconst WoodBlock = React.lazy(() => import('src/models/WoodBlock'))\r\n\r\nconst powerBtnInitZ = -202.32\r\n\r\nconst Engine = (props: JSX.IntrinsicElements['group']) => {\r\n  const { nodes, materials } = useGLTF(EngineModelPath) as GLTFResult\r\n\r\n  const textRef = useRef<Text & { text: string }>()\r\n  const powerBtnRef = useRef<THREE.Mesh>(null)\r\n\r\n  useFrame(() => {\r\n    const isPowerSupplied = selectEngineIsPowerSupplied(store.getState())\r\n\r\n    if (textRef.current) {\r\n      textRef.current.text = isPowerSupplied\r\n        ? selectEngineRotationFrequency(store.getState()).toString()\r\n        : ''\r\n    }\r\n\r\n    if (powerBtnRef.current) {\r\n      powerBtnRef.current.position.setZ(\r\n        isPowerSupplied ? powerBtnInitZ + 10 : powerBtnInitZ,\r\n      )\r\n    }\r\n  })\r\n\r\n  const handlePowerClick = () => {\r\n    const isPowerSupplied = selectEngineIsPowerSupplied(store.getState())\r\n\r\n    store.dispatch(setEngineIsPowerSupplied(!isPowerSupplied))\r\n  }\r\n\r\n  const handleFrequencyUpClick = () => {\r\n    const frequency = selectEngineRotationFrequency(store.getState())\r\n\r\n    store.dispatch(\r\n      setEngineRotationFrequency(\r\n        Math.min(\r\n          ENGINE_ROTATION_FREQUENCY_MAX,\r\n          frequency + ENGINE_ROTATION_FREQUENCY_STEP,\r\n        ),\r\n      ),\r\n    )\r\n  }\r\n\r\n  const handleFrequencyDownClick = () => {\r\n    const frequency = selectEngineRotationFrequency(store.getState())\r\n\r\n    store.dispatch(\r\n      setEngineRotationFrequency(\r\n        Math.max(\r\n          ENGINE_ROTATION_FREQUENCY_MIN,\r\n          frequency - ENGINE_ROTATION_FREQUENCY_STEP,\r\n        ),\r\n      ),\r\n    )\r\n  }\r\n\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group position={[0, 105, 0]}>\r\n        <group scale={0.4} position={[0, 4, 0]} rotation={[0, -Math.PI / 2, 0]}>\r\n          <group\r\n            position={[-169.62, 7.9, 15.07]}\r\n            rotation={[0, 0, -Math.PI / 2]}\r\n            scale={[15.06, 13.77, 337.81]}\r\n          >\r\n            <mesh\r\n              geometry={nodes.Cube004.geometry}\r\n              material={materials.metallic}\r\n            />\r\n            <mesh\r\n              geometry={nodes.Cube004_1.geometry}\r\n              material={materials.black}\r\n            />\r\n            <mesh\r\n              geometry={nodes.Cube004_2.geometry}\r\n              material={materials.grey_tabl}\r\n            />\r\n          </group>\r\n\r\n          <mesh\r\n            geometry={nodes.Cube001.geometry}\r\n            material={materials.grey_button}\r\n            position={[300.19, 281.96, -151.04]}\r\n            scale={[3.61, 19.76, 19.78]}\r\n            onClick={handleFrequencyUpClick}\r\n            onPointerEnter={setPointerCursor}\r\n            onPointerLeave={setDefaultCursor}\r\n          />\r\n          <mesh\r\n            geometry={nodes.Cube002.geometry}\r\n            material={materials.grey_button}\r\n            position={[300.19, 212.62, -151.04]}\r\n            rotation={[0, 0, Math.PI]}\r\n            scale={[3.61, 19.76, 19.78]}\r\n            onClick={handleFrequencyDownClick}\r\n            onPointerEnter={setPointerCursor}\r\n            onPointerLeave={setDefaultCursor}\r\n          />\r\n          <mesh\r\n            ref={powerBtnRef}\r\n            geometry={nodes.button_on.geometry}\r\n            material={materials.red}\r\n            position={[255.71, 305.49, -202.32]}\r\n            rotation={[Math.PI / 2, 0, 0]}\r\n            scale={[22.49, 10.95, 15.01]}\r\n            onClick={handlePowerClick}\r\n            onPointerEnter={setPointerCursor}\r\n            onPointerLeave={setDefaultCursor}\r\n          />\r\n          <mesh\r\n            geometry={nodes.handle_1.geometry}\r\n            material={materials.metallic}\r\n            position={[255.71, 290.87, 257.96]}\r\n            rotation={[Math.PI / 2, 0.85, 0]}\r\n            scale={[12.97, 34.12, 12.97]}\r\n          />\r\n        </group>\r\n\r\n        <Text\r\n          ref={textRef}\r\n          fontSize={47}\r\n          color='#F44336'\r\n          scale={[0.7, 1, 1]}\r\n          position={[0, 100, 120]}\r\n          font='https://cdnjs.cloudflare.com/ajax/libs/firacode/6.2.0/woff/FiraCode-Light.woff'\r\n        >\r\n          {' '}\r\n        </Text>\r\n      </group>\r\n\r\n      <WoodBlock args={[170, 105, 220]} position={[0, 52, 0]} />\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default Engine\r\n"],"names":["WoodBlock","React","powerBtnInitZ","props","_ref","useGLTF","EngineModelPath","nodes","materials","textRef","useRef","powerBtnRef","useFrame","isPowerSupplied","selectEngineIsPowerSupplied","store","current","text","selectEngineRotationFrequency","toString","position","setZ","_jsxs","_objectSpread","dispose","children","scale","rotation","Math","PI","_jsx","geometry","Cube004","material","metallic","Cube004_1","black","Cube004_2","grey_tabl","Cube001","grey_button","onClick","frequency","setEngineRotationFrequency","min","ENGINE_ROTATION_FREQUENCY_MAX","ENGINE_ROTATION_FREQUENCY_STEP","onPointerEnter","setPointerCursor","onPointerLeave","setDefaultCursor","Cube002","max","ENGINE_ROTATION_FREQUENCY_MIN","ref","button_on","red","setEngineIsPowerSupplied","handle_1","Text","fontSize","color","font","args"],"sourceRoot":""}