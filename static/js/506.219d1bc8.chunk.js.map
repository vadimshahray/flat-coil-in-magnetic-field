{"version":3,"file":"static/js/506.219d1bc8.chunk.js","mappings":"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","sources":["models/Oscilloscope/OscilloscopeDisplay/OscilloscopeInfoBar/OscilloscopeInfoBarScaleY.tsx","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeInfoBar/OscilloscopeInfoBarScaleX.tsx","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeInfoBar/OscilloscopeInfoBarContrast.tsx","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeInfoBar/OscilloscopeInfoBar.tsx","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeWaveform/OscilloscopeWaveformGrid.tsx","../node_modules/@react-three/drei/core/CubicBezierLine.js","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeWaveform/OscilloscopeWaveformGraphic.tsx","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeWaveform/OscilloscopeWaveform.tsx","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeContrastSurface.tsx","models/Oscilloscope/OscilloscopeDisplay/OscilloscopeDisplay.tsx","models/Oscilloscope/Oscilloscope.tsx"],"sourcesContent":["import { store } from 'src/store'\r\nimport React, { useRef } from 'react'\r\nimport { Text } from '@react-three/drei'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport FiraCode from 'src/assets/fonts/firacode_light.woff'\r\nimport {\r\n  selectOscilloscopeScaleY,\r\n  selectOscilloscopeConfigurableParameterI,\r\n} from '@selectors'\r\n\r\nexport const OscilloscopeInfoBarScaleY = (\r\n  props: JSX.IntrinsicElements['group'],\r\n) => {\r\n  const ref = useRef<Text & { text: string; anchorX: number }>()\r\n\r\n  const isConfigurable =\r\n    useSelector(selectOscilloscopeConfigurableParameterI) === 0\r\n\r\n  useFrame(() => {\r\n    if (!ref.current) return\r\n\r\n    const scaleY = selectOscilloscopeScaleY(store.getState())\r\n\r\n    if (scaleY >= 0.01) {\r\n      ref.current.text = `${scaleY.toFixed(2)} В / ДЕЛ.`\r\n      ref.current.anchorX = -2.5\r\n\r\n      return\r\n    }\r\n\r\n    ref.current.text = `${(scaleY * 1000).toFixed(2)} мВ / ДЕЛ.`\r\n    ref.current.anchorX = -0.65\r\n  })\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh position={[-10.4, 0.4, -0.25]} visible={isConfigurable}>\r\n        <boxGeometry args={[10, 4.6, 0.1]} />\r\n\r\n        <meshStandardMaterial color='red' />\r\n      </mesh>\r\n\r\n      <Text\r\n        renderOrder={-1}\r\n        anchorX={15}\r\n        fontSize={3}\r\n        color={isConfigurable ? '#2C090A' : 'red'}\r\n        font={FiraCode}\r\n      >\r\n        УСИЛ.\r\n      </Text>\r\n\r\n      <Text\r\n        ref={ref}\r\n        renderOrder={-1}\r\n        fontSize={3}\r\n        color={'red'}\r\n        font={FiraCode}\r\n      >\r\n        {''}\r\n      </Text>\r\n    </group>\r\n  )\r\n}\r\n","import { store } from 'src/store'\r\nimport React, { useRef } from 'react'\r\nimport { Text } from '@react-three/drei'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport FiraCode from 'src/assets/fonts/firacode_light.woff'\r\nimport {\r\n  selectOscilloscopeScaleX,\r\n  selectOscilloscopeConfigurableParameterI,\r\n} from '@selectors'\r\n\r\nexport const OscilloscopeInfoBarScaleX = (\r\n  props: JSX.IntrinsicElements['group'],\r\n) => {\r\n  const valueRef = useRef<Text & { text: string; color: string }>()\r\n\r\n  const isConfigurable =\r\n    useSelector(selectOscilloscopeConfigurableParameterI) === 1\r\n\r\n  useFrame(() => {\r\n    if (!valueRef.current) return\r\n\r\n    valueRef.current.text = `${selectOscilloscopeScaleX(\r\n      store.getState(),\r\n    ).toFixed(2)} мс / ДЕЛ.`\r\n  })\r\n\r\n  return (\r\n    <group {...props}>\r\n      <mesh position={[-10.4, 0.125, -0.25]} visible={isConfigurable}>\r\n        <boxGeometry args={[10, 4.6, 0.1]} />\r\n\r\n        <meshStandardMaterial color='red' />\r\n      </mesh>\r\n\r\n      <Text\r\n        renderOrder={-1}\r\n        anchorX={15}\r\n        fontSize={3}\r\n        color={isConfigurable ? '#2C090A' : 'red'}\r\n        font={FiraCode}\r\n      >\r\n        ДЛИТ.\r\n      </Text>\r\n\r\n      <Text\r\n        ref={valueRef}\r\n        renderOrder={-1}\r\n        anchorX={-0.75}\r\n        fontSize={3}\r\n        color={'red'}\r\n        font={FiraCode}\r\n      >\r\n        {''}\r\n      </Text>\r\n    </group>\r\n  )\r\n}\r\n","import { store } from 'src/store'\r\nimport React, { useRef } from 'react'\r\nimport { Text } from '@react-three/drei'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { selectOscilloscopeContrast } from '@selectors'\r\nimport FiraCode from 'src/assets/fonts/firacode_light.woff'\r\n\r\nexport const OscilloscopeInfoBarContrast = (\r\n  props: JSX.IntrinsicElements['group'],\r\n) => {\r\n  const ref = useRef<Text & { text: string }>()\r\n\r\n  useFrame(() => {\r\n    if (!ref.current) return\r\n\r\n    ref.current.text = selectOscilloscopeContrast(store.getState()).toFixed(2)\r\n  })\r\n\r\n  return (\r\n    <group {...props}>\r\n      {/* <mesh position={[barWidth / 2, height / 2 - 2.6, 0]}>\r\n        <boxGeometry args={[barWidth, 5, 1]} />\r\n\r\n        <meshStandardMaterial color='red' />\r\n      </mesh> */}\r\n\r\n      <Text\r\n        renderOrder={-1}\r\n        anchorX={15}\r\n        fontSize={3}\r\n        color={'red'}\r\n        font={FiraCode}\r\n      >\r\n        КОНТРАСТ\r\n      </Text>\r\n\r\n      <Text\r\n        ref={ref}\r\n        renderOrder={-1}\r\n        anchorX={-18.8}\r\n        fontSize={3}\r\n        color={'red'}\r\n        font={FiraCode}\r\n      >\r\n        {''}\r\n      </Text>\r\n    </group>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Line } from '@react-three/drei'\r\nimport { OscilloscopeInfoBarScaleY } from './OscilloscopeInfoBarScaleY'\r\nimport { OscilloscopeInfoBarScaleX } from './OscilloscopeInfoBarScaleX'\r\nimport { OscilloscopeInfoBarContrast } from './OscilloscopeInfoBarContrast'\r\n\r\ntype Props = JSX.IntrinsicElements['group'] & {\r\n  height: number\r\n}\r\n\r\nconst barWidth = 30\r\n\r\nexport const OscilloscopeInfoBar = ({ height, ...props }: Props) => {\r\n  return (\r\n    <group {...props}>\r\n      <Line\r\n        points={[\r\n          [-15, height / 2],\r\n          [barWidth, height / 2],\r\n        ]}\r\n        lineWidth={0.5}\r\n        color='red'\r\n      />\r\n\r\n      <mesh position={[7.5, height / 2 - 3, 0]}>\r\n        <boxGeometry args={[45, 6, 0.1]} />\r\n\r\n        <meshStandardMaterial color='red' />\r\n      </mesh>\r\n\r\n      {/* <mesh position={[barWidth / 2, height / 2 - 2.6, 0]}>\r\n        <boxGeometry args={[barWidth, 5, 1]} />\r\n\r\n        <meshStandardMaterial color='red' />\r\n      </mesh> */}\r\n\r\n      <Line\r\n        points={[\r\n          [barWidth, height / 2],\r\n          [barWidth, -height / 2],\r\n        ]}\r\n        lineWidth={0.5}\r\n        color='red'\r\n      />\r\n\r\n      <Line\r\n        points={[\r\n          [-15, -height / 2],\r\n          [barWidth, -height / 2],\r\n        ]}\r\n        lineWidth={0.5}\r\n        color='red'\r\n      />\r\n\r\n      <OscilloscopeInfoBarScaleY position={[2, height / 2 - 9.5, 1]} />\r\n\r\n      <OscilloscopeInfoBarScaleX position={[2, height / 2 - 14, 1]} />\r\n\r\n      <OscilloscopeInfoBarContrast position={[2, height / 2 - 23.5, 1]} />\r\n    </group>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useTranslate } from '@languages'\r\nimport { Line, Text } from '@react-three/drei'\r\nimport { GRID_CELLS_COUNT_IN_QUARTER } from '@constants'\r\nimport Roboto from 'src/assets/fonts/roboto_regular.woff'\r\n\r\ntype Props = {\r\n  size: number\r\n}\r\n\r\nconst gridLines = new Array(GRID_CELLS_COUNT_IN_QUARTER * 2).fill(0)\r\n\r\nexport const OscilloscopeWaveformGrid = ({ size }: Props) => {\r\n  const translate = useTranslate('OscilloscopeWaveformSI')\r\n\r\n  const cellSize = size / GRID_CELLS_COUNT_IN_QUARTER / 2\r\n\r\n  const renderLineH = (_: any, i: number) => (\r\n    <Line\r\n      key={i}\r\n      points={[\r\n        [-size / 2, size / 2 - cellSize * i, 0],\r\n        [size / 2, size / 2 - cellSize * i, 0],\r\n      ]}\r\n      dashed\r\n      dashSize={0.4}\r\n      lineWidth={0.4}\r\n      color='red'\r\n    />\r\n  )\r\n  const renderLineV = (_: any, i: number) => (\r\n    <Line\r\n      key={i}\r\n      points={[\r\n        [-size / 2 + cellSize * i, size / 2, 0],\r\n        [-size / 2 + cellSize * i, -size / 2, 0],\r\n      ]}\r\n      dashed\r\n      dashSize={0.4}\r\n      lineWidth={0.4}\r\n      color='red'\r\n    />\r\n  )\r\n\r\n  return (\r\n    <group>\r\n      {gridLines.map(renderLineH)}\r\n\r\n      {gridLines.map(renderLineV)}\r\n\r\n      <Text\r\n        renderOrder={-1}\r\n        fontSize={2.5}\r\n        font={Roboto}\r\n        color='red'\r\n        position={[4, size / 2 - 3, 1]}\r\n      >\r\n        {`U, ${translate('y')}`}\r\n      </Text>\r\n\r\n      <Text\r\n        renderOrder={-1}\r\n        fontSize={2.5}\r\n        font={Roboto}\r\n        color='red'\r\n        position={[size / 2 - 3, -2, 1]}\r\n      >\r\n        {`t, ${translate('x')}`}\r\n      </Text>\r\n    </group>\r\n  )\r\n}\r\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CubicBezierCurve3 } from 'three';\nimport { Line } from './Line.js';\n\nconst CubicBezierLine = /*#__PURE__*/React.forwardRef(function CubicBezierLine({\n  start,\n  end,\n  midA,\n  midB,\n  segments = 20,\n  ...rest\n}, ref) {\n  const points = React.useMemo(() => {\n    const startV = start instanceof Vector3 ? start : new Vector3(...start);\n    const endV = end instanceof Vector3 ? end : new Vector3(...end);\n    const midAV = midA instanceof Vector3 ? midA : new Vector3(...midA);\n    const midBV = midB instanceof Vector3 ? midB : new Vector3(...midB);\n    const interpolatedV = new CubicBezierCurve3(startV, midAV, midBV, endV).getPoints(segments);\n    return interpolatedV;\n  }, [start, end, midA, midB, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: points\n  }, rest));\n});\n\nexport { CubicBezierLine };\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { CubicBezierLine } from '@react-three/drei'\r\nimport {\r\n  GRID_CELLS_COUNT_IN_QUARTER,\r\n  ENGINE_ROTATION_FREQUENCY_MIN,\r\n} from '@constants'\r\nimport {\r\n  selectModelingVoltageMax,\r\n  selectOscilloscopeScaleY,\r\n  selectOscilloscopeScaleX,\r\n  selectEngineRotationFrequency,\r\n  selectIsOscilloscopeConnected,\r\n  selectIsOscilloscopeConnectionInverted,\r\n} from '@selectors'\r\n\r\ntype Props = {\r\n  size: number\r\n}\r\nconst T_MAX = 1 / ENGINE_ROTATION_FREQUENCY_MIN\r\nconst T_MAX_SIZE = T_MAX * GRID_CELLS_COUNT_IN_QUARTER\r\n\r\nexport const OscilloscopeWaveformGraphic = ({ size }: Props) => {\r\n  const isConnected = useSelector(selectIsOscilloscopeConnected)\r\n  const inverted = useSelector(selectIsOscilloscopeConnectionInverted)\r\n\r\n  const V = scaleV(\r\n    useSelector(selectModelingVoltageMax),\r\n    useSelector(selectOscilloscopeScaleY),\r\n  )\r\n  const T = scaleT(\r\n    1 / useSelector(selectEngineRotationFrequency),\r\n    useSelector(selectOscilloscopeScaleX),\r\n  )\r\n\r\n  if (!isConnected) return null\r\n\r\n  const TSize = (T / T_MAX_SIZE) * size\r\n  const oscillationsInQuarter = new Array(Math.ceil(size / 2 / TSize)).fill(0)\r\n\r\n  const renderOscillation = (_: any, i: number) => {\r\n    const ySign = i % 2 ? -1 : 1\r\n    const xSign = inverted ? -1 : 1\r\n\r\n    return (\r\n      <>\r\n        <CubicBezierLine\r\n          key={i}\r\n          start={[xSign * (i * TSize), 0, 0]}\r\n          midA={[xSign * (i * TSize + TSize / 2), ySign * V, 0]}\r\n          midB={[xSign * (i * TSize + TSize / 2), ySign * V, 0]}\r\n          end={[xSign * (i * TSize + TSize), 0, 0]}\r\n          color='red'\r\n          lineWidth={1}\r\n        />\r\n\r\n        <CubicBezierLine\r\n          key={i}\r\n          start={[xSign * (-i * TSize), 0, 0]}\r\n          midA={[xSign * (-i * TSize - TSize / 2), -ySign * V, 0]}\r\n          midB={[xSign * (-i * TSize - TSize / 2), -ySign * V, 0]}\r\n          end={[xSign * (-i * TSize - TSize), 0, 0]}\r\n          color='red'\r\n          lineWidth={1}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return <group>{oscillationsInQuarter.map(renderOscillation)}</group>\r\n}\r\n\r\nconst T_SCALE_INIT = 0.25\r\nconst scaleT = (T: number, scale: number) => {\r\n  const k = T_SCALE_INIT / scale\r\n\r\n  return T * k\r\n}\r\n\r\nconst V_SCALE_INIT = 0.12875\r\nconst scaleV = (V: number, scale: number) => {\r\n  const k = V_SCALE_INIT / scale\r\n\r\n  return V * k\r\n}\r\n","import React from 'react'\r\nimport { Line } from '@react-three/drei'\r\nimport { OscilloscopeWaveformGrid } from './OscilloscopeWaveformGrid'\r\nimport { OscilloscopeWaveformGraphic } from './OscilloscopeWaveformGraphic'\r\n\r\ntype Props = JSX.IntrinsicElements['group'] & {\r\n  size: number\r\n}\r\n\r\nexport const OscilloscopeWaveform = ({ size, ...props }: Props) => {\r\n  return (\r\n    <group {...props}>\r\n      {/** Рамка */}\r\n      <Line\r\n        points={[\r\n          [-size / 2, size / 2, 0],\r\n          [size / 2, size / 2, 0],\r\n          [size / 2, -size / 2, 0],\r\n          [-size / 2, -size / 2, 0],\r\n          [-size / 2, size / 2, 0],\r\n        ]}\r\n        lineWidth={0.5}\r\n        color='red'\r\n      />\r\n\r\n      {/** Ось Y */}\r\n      <Line\r\n        points={[\r\n          [0, size / 2, 0],\r\n          [0, -size / 2, 0],\r\n        ]}\r\n        lineWidth={0.5}\r\n        color='red'\r\n      />\r\n\r\n      {/** Ось X */}\r\n      <Line\r\n        points={[\r\n          [size / 2, 0, 0],\r\n          [-size / 2, 0, 0],\r\n        ]}\r\n        lineWidth={0.5}\r\n        color='red'\r\n      />\r\n\r\n      <OscilloscopeWaveformGrid size={size} />\r\n\r\n      <OscilloscopeWaveformGraphic size={size} />\r\n    </group>\r\n  )\r\n}\r\n","import * as THREE from 'three'\r\nimport { store } from 'src/store'\r\nimport React, { useRef } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { selectOscilloscopeContrast } from '@selectors'\r\n\r\ntype Props = {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport const OscilloscopeContrastSurface = ({ width, height }: Props) => {\r\n  const materialRef = useRef<THREE.MeshBasicMaterial | null>(null)\r\n\r\n  useFrame(() => {\r\n    if (!materialRef.current) return\r\n\r\n    materialRef.current.opacity =\r\n      1 - selectOscilloscopeContrast(store.getState())\r\n  })\r\n\r\n  return (\r\n    <mesh>\r\n      <boxGeometry args={[width, height, 3]} />\r\n      <meshBasicMaterial ref={materialRef} color='black' transparent />\r\n    </mesh>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { OscilloscopeInfoBar } from './OscilloscopeInfoBar'\r\nimport { OscilloscopeWaveform } from './OscilloscopeWaveform'\r\nimport { OscilloscopeContrastSurface } from './OscilloscopeContrastSurface'\r\n\r\ntype Props = JSX.IntrinsicElements['group'] & {\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport const OscilloscopeDisplay = ({ width, height, ...props }: Props) => {\r\n  return (\r\n    <group {...props}>\r\n      <mesh position={[-2, 0, 2]}>\r\n        <boxGeometry args={[width, height, 1]} />\r\n        <meshBasicMaterial color='red' transparent opacity={0.15} />\r\n      </mesh>\r\n\r\n      <OscilloscopeWaveform size={height - 10} position={[-24.5, 0, 0]} />\r\n\r\n      <OscilloscopeInfoBar height={height - 10} position={[45.5, 0, 0]} />\r\n\r\n      <OscilloscopeContrastSurface width={width} height={height} />\r\n    </group>\r\n  )\r\n}\r\n","import * as THREE from 'three'\nimport { store } from 'src/store'\nimport { GLTF } from 'three-stdlib'\nimport { useDispatch } from '@hooks'\nimport React, { useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useGLTF } from '@react-three/drei'\nimport { TerminalConnectingZone } from '@components'\nimport OscilloscopeModelPath from './oscilloscope.glb'\nimport { ThreeEvent, useFrame } from '@react-three/fiber'\nimport { OscilloscopeDisplay } from './OscilloscopeDisplay'\nimport {\n  setOscilloscopeContrast,\n  setOscilloscopeConfigurableParameter,\n  changeOscilloscopeConfigurableParameterI,\n  setOscilloscopeIsPowerSupplied,\n} from '@slices'\nimport {\n  selectOscilloscopeContrast,\n  selectOscilloscopeIsPowerSupplied,\n} from '@selectors'\nimport {\n  OSCILLOSCOPE_CONTRAST_MAX,\n  OSCILLOSCOPE_CONTRAST_MIN,\n  OSCILLOSCOPE_CONTRAST_STEP,\n} from '@constants'\nimport {\n  numberBetween,\n  setDefaultCursor,\n  setPointerCursor,\n  setRotationCursor,\n} from '@utils'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cylinder: THREE.Mesh\n    Cylinder_1: THREE.Mesh\n    power: THREE.Mesh\n    ['-']: THREE.Mesh\n    ['+']: THREE.Mesh\n    xy: THREE.Mesh\n    Text024: THREE.Mesh\n    Text024_1: THREE.Mesh\n    Text024_2: THREE.Mesh\n    Text024_3: THREE.Mesh\n    Text024_4: THREE.Mesh\n    Text024_5: THREE.Mesh\n    Text024_6: THREE.Mesh\n  }\n  materials: {\n    tabl_background: THREE.MeshStandardMaterial\n    power: THREE.MeshStandardMaterial\n    yellow: THREE.MeshStandardMaterial\n    very_blue: THREE.MeshStandardMaterial\n    Corp: THREE.MeshStandardMaterial\n    blue: THREE.MeshStandardMaterial\n    Back: THREE.MeshPhysicalMaterial\n    metall: THREE.MeshPhysicalMaterial\n    Black_line: THREE.MeshStandardMaterial\n  }\n}\n\nconst powerBtnZ = 77.13\nconst contrastRotation = new THREE.Euler(Math.PI / 2, Math.PI / 2, 0)\n\nconst Oscilloscope = (props: JSX.IntrinsicElements['group']) => {\n  const dispatch = useDispatch()\n\n  const { nodes, materials } = useGLTF(OscilloscopeModelPath) as GLTFResult\n\n  const powerBtnRef = useRef<THREE.Mesh>(null)\n  const contrastRef = useRef<THREE.Group>(null)\n\n  const isPowerSupplied = useSelector(selectOscilloscopeIsPowerSupplied)\n\n  useFrame(() => {\n    if (!powerBtnRef.current) return\n\n    powerBtnRef.current.position.setZ(powerBtnZ - (isPowerSupplied ? 6 : 0))\n\n    const contrast = selectOscilloscopeContrast(store.getState())\n    const angle = Math.PI / 2 - (Math.PI * contrast) / OSCILLOSCOPE_CONTRAST_MAX\n\n    contrastRotation.set(contrastRotation.x, angle, contrastRotation.z)\n\n    contrastRef.current?.setRotationFromEuler(contrastRotation)\n  })\n\n  const handlePowerClick = () => {\n    dispatch(setOscilloscopeIsPowerSupplied(!isPowerSupplied))\n\n    if (!powerBtnRef.current) return\n    powerBtnRef.current.position.z += isPowerSupplied ? 6 : -6\n  }\n\n  const handleWheel = (e: ThreeEvent<WheelEvent>) => {\n    const contrast = selectOscilloscopeContrast(store.getState())\n\n    const newContrast =\n      contrast + Math.sign(-e.deltaY) * OSCILLOSCOPE_CONTRAST_STEP\n\n    const newRoundedContrast =\n      Math.round((newContrast + Number.EPSILON) * 100) / 100\n\n    store.dispatch(\n      setOscilloscopeContrast(\n        numberBetween(\n          newRoundedContrast,\n          OSCILLOSCOPE_CONTRAST_MIN,\n          OSCILLOSCOPE_CONTRAST_MAX,\n        ),\n      ),\n    )\n  }\n\n  const handleIncreaseButtonClick = () => {\n    if (!isPowerSupplied) return\n\n    dispatch(setOscilloscopeConfigurableParameter(1))\n  }\n\n  const handleDecreaseButtonClick = () => {\n    if (!isPowerSupplied) return\n\n    dispatch(setOscilloscopeConfigurableParameter(-1))\n  }\n\n  const handleChangeConfigurableParameter = () => {\n    if (!isPowerSupplied) return\n\n    dispatch(changeOscilloscopeConfigurableParameterI())\n  }\n\n  return (\n    <group {...props} dispose={null}>\n      <group position={[0, -110, 0]}>\n        <group\n          ref={contrastRef}\n          position={[63.35, 34.15, 81.41]}\n          rotation={[Math.PI / 2, 0, 0]}\n          scale={[-12.81, -6.02, -12.81]}\n          onPointerEnter={setRotationCursor}\n          onPointerLeave={setDefaultCursor}\n          onWheel={handleWheel}\n        >\n          <mesh\n            geometry={nodes.Cylinder.geometry}\n            material={materials.tabl_background}\n          />\n          <mesh\n            geometry={nodes.Cylinder_1.geometry}\n            material={materials.Black_line}\n          />\n        </group>\n        <mesh\n          ref={powerBtnRef}\n          geometry={nodes.power.geometry}\n          material={materials.power}\n          position={[-76.17, 32, 76.53]}\n          rotation={[0, -Math.PI / 2, 0]}\n          scale={3.92}\n          onClick={handlePowerClick}\n          onPointerOver={setPointerCursor}\n          onPointerLeave={setDefaultCursor}\n        />\n        <mesh\n          geometry={nodes['-'].geometry}\n          material={materials.yellow}\n          position={[14.54, 32, 76.53]}\n          rotation={[0, -Math.PI / 2, 0]}\n          scale={3.92}\n          onClick={handleDecreaseButtonClick}\n          onPointerOver={setPointerCursor}\n          onPointerLeave={setDefaultCursor}\n        />\n        <mesh\n          geometry={nodes['+'].geometry}\n          material={materials.yellow}\n          position={[33.76, 32, 76.53]}\n          rotation={[0, -Math.PI / 2, 0]}\n          scale={3.92}\n          onClick={handleIncreaseButtonClick}\n          onPointerOver={setPointerCursor}\n          onPointerLeave={setDefaultCursor}\n        />\n        <mesh\n          geometry={nodes.xy.geometry}\n          material={materials.very_blue}\n          position={[-4.84, 32, 76.53]}\n          rotation={[0, -Math.PI / 2, 0]}\n          scale={3.92}\n          onClick={handleChangeConfigurableParameter}\n          onPointerOver={setPointerCursor}\n          onPointerLeave={setDefaultCursor}\n        />\n        <group\n          position={[1.43, 146.79, 74.14]}\n          rotation={[Math.PI / 2, 0, 0]}\n          scale={[5.29, 144.11, 6.64]}\n        >\n          <mesh\n            geometry={nodes.Text024.geometry}\n            material={materials.Black_line}\n          />\n          <mesh geometry={nodes.Text024_1.geometry} material={materials.Corp} />\n          <mesh geometry={nodes.Text024_2.geometry} material={materials.blue} />\n          <mesh geometry={nodes.Text024_3.geometry} material={materials.Back} />\n          <mesh\n            geometry={nodes.Text024_4.geometry}\n            material={materials.very_blue}\n          />\n          <mesh\n            geometry={nodes.Text024_5.geometry}\n            material={materials.metall}\n          />\n          <mesh\n            geometry={nodes.Text024_6.geometry}\n            material={materials.Black_line}\n          />\n        </group>\n\n        <TerminalConnectingZone\n          terminal='Oscilloscope+'\n          color='#832D2E'\n          size={16}\n          position={[-28, 32, 83.5]}\n        />\n\n        <TerminalConnectingZone\n          terminal='Oscilloscope-'\n          color='#4C4C8A'\n          size={16}\n          position={[-56, 32, 83.5]}\n        />\n\n        <OscilloscopeDisplay\n          width={160}\n          height={120}\n          visible={isPowerSupplied}\n          position={[0, 124 / 2 + 54, 74]}\n        />\n      </group>\n    </group>\n  )\n}\n\nexport default Oscilloscope\n"],"names":["OscilloscopeInfoBarScaleY","props","ref","useRef","isConfigurable","useSelector","selectOscilloscopeConfigurableParameterI","useFrame","current","scaleY","selectOscilloscopeScaleY","store","text","concat","toFixed","anchorX","_jsxs","_objectSpread","children","position","visible","_jsx","args","color","Text","renderOrder","fontSize","font","FiraCode","OscilloscopeInfoBarScaleX","valueRef","selectOscilloscopeScaleX","OscilloscopeInfoBarContrast","selectOscilloscopeContrast","OscilloscopeInfoBar","_ref","height","_objectWithoutProperties","_excluded","Line","points","lineWidth","gridLines","Array","GRID_CELLS_COUNT_IN_QUARTER","fill","OscilloscopeWaveformGrid","size","translate","useTranslate","cellSize","map","_","i","dashed","dashSize","Roboto","CubicBezierLine","React","start","end","midA","midB","_ref$segments","segments","rest","startV","Vector3","_construct","_toConsumableArray","endV","midAV","midBV","CubicBezierCurve3","getPoints","_extends","T_MAX_SIZE","ENGINE_ROTATION_FREQUENCY_MIN","OscilloscopeWaveformGraphic","isConnected","selectIsOscilloscopeConnected","inverted","selectIsOscilloscopeConnectionInverted","V","scaleV","selectModelingVoltageMax","T","scaleT","selectEngineRotationFrequency","TSize","oscillationsInQuarter","Math","ceil","ySign","xSign","_Fragment","scale","OscilloscopeWaveform","OscilloscopeContrastSurface","width","materialRef","opacity","transparent","OscilloscopeDisplay","contrastRotation","THREE","PI","dispatch","useDispatch","useGLTF","OscilloscopeModelPath","nodes","materials","powerBtnRef","contrastRef","isPowerSupplied","selectOscilloscopeIsPowerSupplied","_contrastRef$current","setZ","contrast","angle","OSCILLOSCOPE_CONTRAST_MAX","set","x","z","setRotationFromEuler","dispose","rotation","onPointerEnter","setRotationCursor","onPointerLeave","setDefaultCursor","onWheel","e","newContrast","sign","deltaY","OSCILLOSCOPE_CONTRAST_STEP","newRoundedContrast","round","Number","EPSILON","setOscilloscopeContrast","numberBetween","OSCILLOSCOPE_CONTRAST_MIN","geometry","Cylinder","material","tabl_background","Cylinder_1","Black_line","power","onClick","setOscilloscopeIsPowerSupplied","onPointerOver","setPointerCursor","yellow","setOscilloscopeConfigurableParameter","xy","very_blue","changeOscilloscopeConfigurableParameterI","Text024","Text024_1","Corp","Text024_2","blue","Text024_3","Back","Text024_4","Text024_5","metall","Text024_6","TerminalConnectingZone","terminal"],"sourceRoot":""}