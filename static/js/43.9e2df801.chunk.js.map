{"version":3,"file":"static/js/43.9e2df801.chunk.js","mappings":"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","sources":["models/CurrentSource/CurrentSource.tsx"],"sourcesContent":["import * as THREE from 'three'\nimport { store } from 'src/store'\nimport { GLTF } from 'three-stdlib'\nimport React, { useRef } from 'react'\nimport { Text, useGLTF } from '@react-three/drei'\nimport { TerminalConnectingZone } from '@components'\nimport CurrentSourceModelPath from './currentSource.glb'\nimport { useFrame, ThreeEvent } from '@react-three/fiber'\nimport FiraCode from 'src/assets/fonts/firacode_light.woff'\nimport {\n  setCurrentSourceAmperage,\n  setCurrentSourceIsPowerSupplied,\n} from '@slices'\nimport {\n  selectCurrentSourceAmperage,\n  selectCurrentSourceIsPowerSupplied,\n} from '@selectors'\nimport {\n  CURRENT_SOURCE_AMPERAGE_MAX,\n  CURRENT_SOURCE_AMPERAGE_MIN,\n  CURRENT_SOURCE_AMPERAGE_STEP,\n} from '@constants'\nimport {\n  numberBetween,\n  setDefaultCursor,\n  setPointerCursor,\n  setRotationCursor,\n  addInsignificantZeros,\n} from '@utils'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cylinder002: THREE.Mesh\n    Cylinder002_1: THREE.Mesh\n    power: THREE.Mesh\n    Text018: THREE.Mesh\n    Text018_1: THREE.Mesh\n    Text018_2: THREE.Mesh\n    Text018_3: THREE.Mesh\n    Text018_4: THREE.Mesh\n    Text018_5: THREE.Mesh\n  }\n  materials: {\n    tabl_background: THREE.MeshStandardMaterial\n    Black_line: THREE.MeshStandardMaterial\n    power: THREE.MeshStandardMaterial\n    metall: THREE.MeshPhysicalMaterial\n    blue: THREE.MeshStandardMaterial\n    grey: THREE.MeshStandardMaterial\n    black_line: THREE.MeshStandardMaterial\n    black: THREE.MeshStandardMaterial\n  }\n}\n\nconst powerBtnPositionZ = 103.5\n\nconst amperageSwitchRotation = new THREE.Euler(Math.PI / 2, Math.PI / 2, 0)\n\nconst CurrentSource = (props: JSX.IntrinsicElements['group']) => {\n  const { nodes, materials } = useGLTF(CurrentSourceModelPath) as GLTFResult\n\n  const textRef = useRef<Text & { text: string }>()\n  const textSIRef = useRef<THREE.Mesh>()\n  const powerBtnRef = useRef<THREE.Mesh>(null)\n  const amperageSwitchRef = useRef<THREE.Group>(null)\n\n  useFrame(() => {\n    const amperage = selectCurrentSourceAmperage(store.getState())\n    const isPowerSupplied = selectCurrentSourceIsPowerSupplied(store.getState())\n\n    if (textRef.current) {\n      textRef.current.text = isPowerSupplied\n        ? addInsignificantZeros(amperage.toFixed(2), 1)\n        : ''\n    }\n\n    if (textSIRef.current) {\n      textSIRef.current.visible = isPowerSupplied\n    }\n\n    powerBtnRef.current?.position?.setZ(\n      isPowerSupplied ? powerBtnPositionZ - 6 : powerBtnPositionZ,\n    )\n\n    const angle =\n      Math.PI / 2 - (Math.PI * amperage) / CURRENT_SOURCE_AMPERAGE_MAX\n\n    amperageSwitchRotation.set(\n      amperageSwitchRotation.x,\n      angle,\n      amperageSwitchRotation.z,\n    )\n\n    amperageSwitchRef.current?.setRotationFromEuler(amperageSwitchRotation)\n  })\n\n  const handlePowerClick = () => {\n    const isPowerSupplied = selectCurrentSourceIsPowerSupplied(store.getState())\n\n    store.dispatch(setCurrentSourceIsPowerSupplied(!isPowerSupplied))\n  }\n\n  const handleWheel = (e: ThreeEvent<WheelEvent>) => {\n    const amperage = selectCurrentSourceAmperage(store.getState())\n\n    const newAmperage =\n      amperage + Math.sign(-e.deltaY) * CURRENT_SOURCE_AMPERAGE_STEP * 3\n    const newRoundedAmperage =\n      Math.round((newAmperage + Number.EPSILON) * 100) / 100\n\n    store.dispatch(\n      setCurrentSourceAmperage(\n        numberBetween(\n          newRoundedAmperage,\n          CURRENT_SOURCE_AMPERAGE_MIN,\n          CURRENT_SOURCE_AMPERAGE_MAX,\n        ),\n      ),\n    )\n  }\n\n  return (\n    <group {...props} dispose={null}>\n      <group\n        ref={amperageSwitchRef}\n        position={[17.3, 0.85, 105.19]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[-9.6, -4.51, -9.6]}\n        onPointerEnter={setRotationCursor}\n        onPointerLeave={setDefaultCursor}\n        onWheel={handleWheel}\n      >\n        <mesh\n          geometry={nodes.Cylinder002.geometry}\n          material={materials.tabl_background}\n        />\n        <mesh\n          geometry={nodes.Cylinder002_1.geometry}\n          material={materials.Black_line}\n        />\n      </group>\n      <mesh\n        ref={powerBtnRef}\n        geometry={nodes.power.geometry}\n        material={materials.power}\n        position={[82.59, 0.85, 102.85]}\n        rotation={[0, -Math.PI / 2, 0]}\n        scale={[3.92, 5.58, 5.58]}\n        onClick={handlePowerClick}\n        onPointerEnter={setPointerCursor}\n        onPointerLeave={setDefaultCursor}\n      />\n      <group\n        position={[14.47, -0.64, 74.87]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[5.29, 107.72, 6.64]}\n      >\n        <mesh\n          geometry={nodes.Text018.geometry}\n          material={materials.Black_line}\n        />\n        <mesh geometry={nodes.Text018_1.geometry} material={materials.metall} />\n        <mesh geometry={nodes.Text018_2.geometry} material={materials.blue} />\n        <mesh geometry={nodes.Text018_3.geometry} material={materials.grey} />\n        <mesh\n          geometry={nodes.Text018_4.geometry}\n          material={materials.black_line}\n        />\n        <mesh geometry={nodes.Text018_5.geometry} material={materials.black} />\n      </group>\n\n      <group scale={[0.7, 1, 1]} position={[-41.5, -4, 102]}>\n        <Text\n          ref={textRef}\n          fontSize={34}\n          color='red'\n          position={[-3, 0, 0]}\n          font={FiraCode}\n        >\n          {' '}\n        </Text>\n\n        <Text\n          ref={textSIRef}\n          fontSize={24}\n          color='red'\n          position={[45, -3, 0]}\n          font={FiraCode}\n        >\n          A\n        </Text>\n      </group>\n\n      <TerminalConnectingZone\n        terminal='CurrentSource+'\n        color='#832D2E'\n        size={16}\n        position={[63, 0, 108]}\n      />\n\n      <TerminalConnectingZone\n        terminal='CurrentSource-'\n        color='#4C4C8A'\n        size={16}\n        position={[42, 0, 108]}\n      />\n    </group>\n  )\n}\n\nexport default CurrentSource\n"],"names":["amperageSwitchRotation","THREE","Math","PI","props","_ref","useGLTF","CurrentSourceModelPath","nodes","materials","textRef","useRef","textSIRef","powerBtnRef","amperageSwitchRef","useFrame","_powerBtnRef$current","_powerBtnRef$current$","_amperageSwitchRef$cu","amperage","selectCurrentSourceAmperage","store","isPowerSupplied","selectCurrentSourceIsPowerSupplied","current","text","addInsignificantZeros","toFixed","visible","position","setZ","powerBtnPositionZ","angle","CURRENT_SOURCE_AMPERAGE_MAX","set","x","z","setRotationFromEuler","_jsxs","_objectSpread","dispose","children","ref","rotation","scale","onPointerEnter","setRotationCursor","onPointerLeave","setDefaultCursor","onWheel","e","newAmperage","sign","deltaY","CURRENT_SOURCE_AMPERAGE_STEP","newRoundedAmperage","round","Number","EPSILON","setCurrentSourceAmperage","numberBetween","CURRENT_SOURCE_AMPERAGE_MIN","_jsx","geometry","Cylinder002","material","tabl_background","Cylinder002_1","Black_line","power","onClick","setCurrentSourceIsPowerSupplied","setPointerCursor","Text018","Text018_1","metall","Text018_2","blue","Text018_3","grey","Text018_4","black_line","Text018_5","black","Text","fontSize","color","font","FiraCode","TerminalConnectingZone","terminal","size"],"sourceRoot":""}