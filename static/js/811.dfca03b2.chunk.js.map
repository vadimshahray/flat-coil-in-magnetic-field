{"version":3,"file":"static/js/811.dfca03b2.chunk.js","mappings":"6SAmFA,EAvDuB,SAACA,GACtB,IAAAC,GAA6BC,EAAAA,EAAAA,GAAQC,GAA7BC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAEf,OACEC,EAAAA,EAAAA,MAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWP,GAAK,IAAEQ,QAAS,KAAKC,SAAA,EAC9BH,EAAAA,EAAAA,MAAA,SACEI,SAAU,EAAE,MAAO,OAAQ,QAC3BC,SAAU,CAACC,KAAKC,GAAK,EAAG,EAAG,GAC3BC,MAAO,CAAC,KAAM,IAAM,MAAML,SAAA,EAE1BM,EAAAA,EAAAA,KAAA,QACEC,SAAUZ,EAAMa,YAAYD,SAC5BE,SAAUb,EAAUc,YAEtBJ,EAAAA,EAAAA,KAAA,QACEC,SAAUZ,EAAMgB,cAAcJ,SAC9BE,SAAUb,EAAUgB,QAEtBN,EAAAA,EAAAA,KAAA,QACEC,SAAUZ,EAAMkB,cAAcN,SAC9BE,SAAUb,EAAUkB,gBAEtBR,EAAAA,EAAAA,KAAA,QACEC,SAAUZ,EAAMoB,cAAcR,SAC9BE,SAAUb,EAAUoB,WAEtBV,EAAAA,EAAAA,KAAA,QACEC,SAAUZ,EAAMsB,cAAcV,SAC9BE,SAAUb,EAAUsB,qBAEtBZ,EAAAA,EAAAA,KAAA,QACEC,SAAUZ,EAAMwB,cAAcZ,SAC9BE,SAAUb,EAAUwB,YAEtBd,EAAAA,EAAAA,KAAA,QACEC,SAAUZ,EAAM0B,cAAcd,SAC9BE,SAAUb,EAAU0B,YAIxBhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAsB,CACrBC,SAAS,kBACTC,MAAM,UACNxB,SAAU,CAAC,GAAI,GAAI,QAGrBK,EAAAA,EAAAA,KAACiB,EAAAA,GAAsB,CACrBC,SAAS,kBACTC,MAAM,UACNxB,SAAU,EAAE,GAAI,GAAI,UAI5B,C","sources":["models/HelmholtzCoils/HelmholtzCoils.tsx"],"sourcesContent":["import React from 'react'\nimport * as THREE from 'three'\nimport { GLTF } from 'three-stdlib'\nimport { useGLTF } from '@react-three/drei'\nimport { TerminalConnectingZone } from '@components'\nimport HelmholtzCoilsModelPath from './HelmholtzCoils.glb'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Cylinder015: THREE.Mesh\n    Cylinder015_1: THREE.Mesh\n    Cylinder015_2: THREE.Mesh\n    Cylinder015_3: THREE.Mesh\n    Cylinder015_4: THREE.Mesh\n    Cylinder015_5: THREE.Mesh\n    Cylinder015_6: THREE.Mesh\n  }\n  materials: {\n    metallic: THREE.MeshStandardMaterial\n    blue: THREE.MeshStandardMaterial\n    grey_plastic: THREE.MeshPhysicalMaterial\n    cuprium: THREE.MeshPhysicalMaterial\n    very_grey_plastic: THREE.MeshPhysicalMaterial\n    Material: THREE.MeshStandardMaterial\n    balks: THREE.MeshStandardMaterial\n  }\n}\n\nconst HelmholtzCoils = (props: JSX.IntrinsicElements['group']) => {\n  const { nodes, materials } = useGLTF(HelmholtzCoilsModelPath) as GLTFResult\n\n  return (\n    <group {...props} dispose={null}>\n      <group\n        position={[-97.14, 43.72, -119.73]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[1.91, 0.86, 1.91]}\n      >\n        <mesh\n          geometry={nodes.Cylinder015.geometry}\n          material={materials.metallic}\n        />\n        <mesh\n          geometry={nodes.Cylinder015_1.geometry}\n          material={materials.blue}\n        />\n        <mesh\n          geometry={nodes.Cylinder015_2.geometry}\n          material={materials.grey_plastic}\n        />\n        <mesh\n          geometry={nodes.Cylinder015_3.geometry}\n          material={materials.cuprium}\n        />\n        <mesh\n          geometry={nodes.Cylinder015_4.geometry}\n          material={materials.very_grey_plastic}\n        />\n        <mesh\n          geometry={nodes.Cylinder015_5.geometry}\n          material={materials.Material}\n        />\n        <mesh\n          geometry={nodes.Cylinder015_6.geometry}\n          material={materials.balks}\n        />\n      </group>\n\n      <TerminalConnectingZone\n        terminal='HelmholtzCoils+'\n        color='#832D2E'\n        position={[60, 30, 134]}\n      />\n\n      <TerminalConnectingZone\n        terminal='HelmholtzCoils-'\n        color='#4C4C8A'\n        position={[-60, 30, 134]}\n      />\n    </group>\n  )\n}\n\nexport default HelmholtzCoils\n"],"names":["props","_ref","useGLTF","HelmholtzCoilsModelPath","nodes","materials","_jsxs","_objectSpread","dispose","children","position","rotation","Math","PI","scale","_jsx","geometry","Cylinder015","material","metallic","Cylinder015_1","blue","Cylinder015_2","grey_plastic","Cylinder015_3","cuprium","Cylinder015_4","very_grey_plastic","Cylinder015_5","Material","Cylinder015_6","balks","TerminalConnectingZone","terminal","color"],"sourceRoot":""}